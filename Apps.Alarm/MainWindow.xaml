<i:BaseWindow 
    x:Class="Alarm.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://imagin.tech/imagin/common"
    i:LocalizeDictionary.DesignCulture="en"
    i:ResxLocalizationProvider.DefaultAssembly="{i:AssemblyName}"
    i:ResxLocalizationProvider.DefaultDictionary="Main"
    Closing="OnWindowClosing"
    ResizeMode="NoResize"
    Height="{i:Options WindowHeight, Mode=TwoWay}"
    Width="{i:Options WindowWidth, Mode=TwoWay}"
    SizeToContent="Height"
    Title="{i:AssemblyProduct}"    
    TitleIcon="{i:Image Alarm, Images/Clock.png}"
    UseLayoutRounding="True"
    WindowStartupLocation="CenterScreen">
    <i:BaseWindow.Buttons>
        <i:WindowButton
            Command="{Binding AboutCommand}"
            Content="{i:Image Alarm, Images/Info.png}"
            ContentSize="12,12"
            IsCheckable="False"
            ToolTip="About"/>
        <i:WindowButton
            Content="{i:Image Alarm, Images/Options.png}"
            ContentSize="12,12"
            IsCheckable="True"
            IsChecked="{Binding ViewOptions, Mode=TwoWay}"
            ToolTip="Options"/>
    </i:BaseWindow.Buttons>
    <i:BaseWindow.Resources>
        <i:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <i:FileNameConverter x:Key="FileNameConverter"/>
        <i:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </i:BaseWindow.Resources>
    <Grid>
        <Grid 
            Visibility="{Binding ViewOptions, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=1}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid
                Grid.Row="0"
                Margin="10"
                i:GridExtensions.Rows="Auto,Auto,Auto,Auto,Auto">

                <i:Note
                    Grid.Row="0"
                    Background="{DynamicResource Brush.Blue}"
                    Margin="0,0,0,5"
                    Source="pack://application:,,,/Alarm;component/Images/Music.png"
                    Text="Currently playing"
                    Visibility="{Binding Media.Playing, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                <i:Note
                    Grid.Row="1"
                    Background="{DynamicResource Brush.Orange}"
                    Margin="0,0,0,5"
                    Source="pack://application:,,,/Alarm;component/Images/Warning.png"
                    Text="{Binding NextAlarm, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"
                    Visibility="{Binding Set, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                <GroupBox
                    Grid.Row="2"
                    Margin="0,0,0,10"
                    Padding="10,10,0,10">
                    <GroupBox.Header>
                        <StackPanel Orientation="Horizontal">
                            <Ellipse 
                                Height="12"
                                Margin="0,0,10,0"
                                VerticalAlignment="Center"
                                Width="12">
                                <Ellipse.Style>
                                    <Style TargetType="{x:Type Ellipse}">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Set}" Value="True">
                                                <Setter Property="Fill" Value="{DynamicResource Brush.Green}"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Set}" Value="False">
                                                <Setter Property="Fill" Value="{DynamicResource Brush.Red}"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Ellipse.Style>
                            </Ellipse>
                            <CheckBox
                                IsChecked="{Binding Set, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                                <StackPanel
                                    Orientation="Horizontal">
                                    <TextBlock
                                        Margin="0,0,10,0"
                                        Text="Set"/>
                                    <Label
                                        Content="{Binding Difference, Mode=OneWay}" 
                                        Style="{DynamicResource Label.Accent}"/>
                                </StackPanel>
                            </CheckBox>
                        </StackPanel>
                    </GroupBox.Header>
                    <Grid
                        IsEnabled="{Binding Set, Converter={StaticResource InverseBooleanConverter}}"
                        i:PanelExtensions.VerticalContentAlignment="Center">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <i:Clock
                            Grid.Row="0"
                            Grid.RowSpan="4"
                            Margin="0,0,15,0"
                            A="{Binding From}"
                            AVisibility="Visible"
                            B="{Binding To}"
                            BVisibility="Visible"
                            PathStroke="Azure"
                            PathStrokeThickness="2"/>

                        <Grid
                            Grid.Column="1"
                            Grid.Row="0"
                            Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Border
                                Grid.Column="0"
                                BorderBrush="#11000000"
                                BorderThickness="1"
                                Margin="0,0,5,0">
                                <Border Padding="10">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid
                                        Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <Ellipse
                                                Grid.Column="0"
                                                Fill="{DynamicResource Brush.Green}"
                                                Height="12"
                                                Margin="0,0,5,0"
                                                Width="12"/>
                                            <TextBlock
                                            Grid.Column="1"
                                            Text="Start"/>
                                        </Grid>
                                        <TextBlock
                                            Grid.Row="1"
                                            Margin="0,0,0,10"
                                            Opacity="0.5"
                                            Text="{Binding From, StringFormat='{}{0:dddd, MMM d, yyyy}', Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <i:TimeSpanView
                                            Grid.Row="2"
                                            Value="{i:Options StartTime, Mode=TwoWay}"/>
                                    </Grid>
                                </Border>
                            </Border>
                            <Border
                                Grid.Column="1"
                                BorderBrush="#11000000"
                                BorderThickness="1">
                                <Border Padding="10">
                                    <Grid>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="Auto"/>
                                        </Grid.RowDefinitions>
                                        <Grid
                                        Grid.Row="0">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>

                                            <Ellipse
                                                Grid.Column="0"
                                                Fill="{DynamicResource Brush.Red}"
                                                Height="12"
                                                Margin="0,0,5,0"
                                                Width="12"/>
                                            <TextBlock
                                                Grid.Column="1"
                                                Text="End"/>
                                        </Grid>
                                        <TextBlock
                                            Grid.Row="1"
                                            Margin="0,0,0,10"
                                            Opacity="0.5"
                                            Text="{Binding To, StringFormat='{}{0:dddd, MMM d, yyyy}', Mode=OneWay, UpdateSourceTrigger=PropertyChanged}"/>
                                        <i:TimeSpanView
                                            Grid.Row="2"
                                            Value="{i:Options EndTime, Mode=TwoWay}"/>
                                    </Grid>
                                </Border>
                            </Border>
                        </Grid>
                        <Grid 
                            Grid.Column="1"
                            Grid.Row="1"
                            i:PanelExtensions.Spacing="0,0,8,0"
                            i:PanelExtensions.SpacingExcept="Last">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="104"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock
                            Grid.Column="0"
                            Margin="0,0,8,0"
                            Text="Every"/>
                            <Label
                            Grid.Column="1"
                            HorizontalAlignment="Center"
                            Style="{DynamicResource Label.Accent}">
                                <StackPanel
                                HorizontalAlignment="Center"
                                Orientation="Horizontal">
                                    <TextBlock 
                                    Margin="0,0,4,0"
                                    Text="{i:Options Increment, Mode=OneWay}"/>
                                    <TextBlock 
                                    Text="minutes"/>
                                </StackPanel>
                            </Label>
                            <Slider
                                Grid.Column="2"
                                Margin="8,0,0,0"
                                Maximum="60"
                                Minimum="5"
                                TickPlacement="None"
                                TickFrequency="5"
                                Interval="5"
                                IsSnapToTickEnabled="True"
                                ToolTip="Increment"
                                Value="{i:Options Increment, Mode=TwoWay}"
                                VerticalAlignment="Center"/>
                        </Grid>
                    </Grid>
                </GroupBox>
                <GroupBox
                    Grid.Row="3"
                    Margin="0,0,0,10"
                    Padding="10,10,0,10">
                    <GroupBox.Header>
                        <Grid
                            i:GridExtensions.Columns="Auto,Auto,Auto,*,Auto">
                            <TextBlock
                                Grid.Column="0"
                                Margin="0,0,5,0"
                                Text="Audio"/>
                            <i:MaskedButton
                                Grid.Column="1"
                                Command="{Binding PlayCommand}"
                                IsEnabled="{Binding CanPlay, Mode=OneWay}"
                                Margin="0,0,5,0"
                                Source="pack://application:,,,/Alarm;component/Images/PlayRound.png"
                                ToolTip="Play"/>
                            <i:MaskedButton
                                Grid.Column="2"
                                Command="{Binding StopCommand}"
                                IsEnabled="{Binding CanStop, Mode=OneWay}"
                                Margin="0,0,5,0"
                                Source="pack://application:,,,/Alarm;component/Images/StopRound.png"
                                ToolTip="Stop"/>
                            <Grid
                                Grid.Column="3"
                                Margin="0,0,5,0">
                                <Slider
                                    x:Name="PART_Slider"
                                    IsEnabled="{Binding Set, Converter={StaticResource InverseBooleanConverter}}"
                                    Margin="5,0,0,0"
                                    Maximum="1"
                                    Minimum="0"
                                    TickFrequency="0.01"
                                    TickPlacement="None"
                                    IsSnapToTickEnabled="True"
                                    Value="{i:Options AudioVolume, Mode=TwoWay}"
                                    ToolTip="Volume"/>
                            </Grid>
                            <Grid
                                Grid.Column="4">
                                <Label
                                    Margin="5,0,0,0"
                                    Style="{DynamicResource Label.Accent}">
                                    <TextBlock
                                    Text="{Binding Value, ElementName=PART_Slider, StringFormat={}{0:p0}}"/>
                                </Label>
                            </Grid>
                        </Grid>
                    </GroupBox.Header>
                    <Grid
                        IsEnabled="{Binding Set, Converter={StaticResource InverseBooleanConverter}}"
                        i:PanelExtensions.Spacing="0,0,0,4"
                        i:PanelExtensions.SpacingExcept="Last">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <i:FileBox
                            Grid.Row="0"
                            BrowseMode="OpenFolder"
                            CanBrowse="True"
                            CanValidate="True"
                            IsReadOnly="True"
                            Text="{i:Options AudioFolderPath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <ComboBox
                            Grid.Row="1"
                            ItemsSource="{Binding Sounds, Mode=OneWay}"
                            SelectedValue="{i:Options AudioFilePath, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock
                                    Text="{Binding ., Converter={StaticResource FileNameConverter}, ConverterParameter=0}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                </GroupBox>
                <GroupBox
                    Grid.Row="4"
                    IsEnabled="{Binding Set, Converter={StaticResource InverseBooleanConverter}}"
                    Padding="0">
                    <GroupBox.Header>
                        <StackPanel
                            Orientation="Horizontal"
                            i:PanelExtensions.Spacing="0,0,5,0"
                            i:PanelExtensions.SpacingExcept="Last">
                            <TextBlock
                                Text="Math"/>
                            <Grid>
                                <Grid.Style>
                                    <Style TargetType="Grid">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{i:Options MathDifficulty}" Value="0">
                                                <Setter Property="Background" Value="#63B522"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{i:Options MathDifficulty}" Value="1">
                                                <Setter Property="Background" Value="#D7B711"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{i:Options MathDifficulty}" Value="2">
                                                <Setter Property="Background" Value="#D78711"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{i:Options MathDifficulty}" Value="3">
                                                <Setter Property="Background" Value="#C43737"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Grid.Style>
                                <TextBlock
                                    Foreground="White"
                                    Margin="5,3"
                                    Text="{Binding MathDifficulty}">
                                </TextBlock>
                            </Grid>
                        </StackPanel>
                    </GroupBox.Header>
                    <Slider
                        Margin="10,10,0,10"
                        Maximum="3"
                        Minimum="0"
                        Orientation="Horizontal"
                        TickFrequency="1"
                        TickPlacement="None"
                        IsSnapToTickEnabled="True"
                        Value="{i:Options MathDifficulty, Mode=TwoWay}"
                        VerticalAlignment="Center"
                        ToolTip="Difficulty">
                        <Slider.Style>
                            <Style TargetType="{x:Type Slider}">
                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                <Setter Property="Focusable" Value="False" />
                                <Setter Property="IsSnapToTickEnabled" Value="True" />
                                <Setter Property="MinWidth" Value="100" />
                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Slider}">
                                            <Track 
                                                x:Name="PART_Track" 
                                                Grid.Row="1" 
                                                Height="{TemplateBinding Height}" 
                                                HorizontalAlignment="{TemplateBinding HorizontalAlignment}" 
                                                VerticalAlignment="{TemplateBinding VerticalAlignment}" 
                                                Width="{TemplateBinding Width}">
                                                <Track.DecreaseRepeatButton>
                                                    <RepeatButton 
                                                        x:Name="PART_DecreaseRepeatButton" 
                                                        Command="Slider.DecreaseLarge"
                                                        Height="4">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="BorderThickness" Value="0" />
                                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Border 
                                                                                Background="{TemplateBinding Background}" 
                                                                                BorderBrush="{TemplateBinding BorderBrush}" 
                                                                                BorderThickness="{TemplateBinding BorderThickness}" 
                                                                                Height="{TemplateBinding Height}"
                                                                                Width="{TemplateBinding Width}"/>
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{i:Options MathDifficulty}" Value="0">
                                                                        <Setter Property="Background">
                                                                            <Setter.Value>
                                                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                                    <GradientStop Offset="0.00" Color="Green"/>
                                                                                </LinearGradientBrush>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{i:Options MathDifficulty}" Value="1">
                                                                        <Setter Property="Background">
                                                                            <Setter.Value>
                                                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                                    <GradientStop Offset="0.00" Color="Green"/>
                                                                                    <GradientStop Offset="1.00" Color="Yellow"/>
                                                                                </LinearGradientBrush>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{i:Options MathDifficulty}" Value="2">
                                                                        <Setter Property="Background">
                                                                            <Setter.Value>
                                                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                                    <GradientStop Offset="0.00" Color="Green"/>
                                                                                    <GradientStop Offset="0.50" Color="Yellow"/>
                                                                                    <GradientStop Offset="1.00" Color="Orange"/>
                                                                                </LinearGradientBrush>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{i:Options MathDifficulty}" Value="3">
                                                                        <Setter Property="Background">
                                                                            <Setter.Value>
                                                                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                                                                    <GradientStop Offset="0.00" Color="Green"/>
                                                                                    <GradientStop Offset="0.33" Color="Yellow"/>
                                                                                    <GradientStop Offset="0.66" Color="Orange"/>
                                                                                    <GradientStop Offset="1.00" Color="Red"/>
                                                                                </LinearGradientBrush>
                                                                            </Setter.Value>
                                                                        </Setter>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.DecreaseRepeatButton>
                                                <Track.Thumb>
                                                    <Thumb>
                                                        <Thumb.Style>
                                                            <Style TargetType="{x:Type Thumb}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="BorderThickness" Value="0"/>
                                                                <Setter Property="Cursor" Value="Hand"/>
                                                                <Setter Property="Height" Value="16"/>
                                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                <Setter Property="Width" Value="10"/>
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type Thumb}">
                                                                            <Border 
                                                                                Background="{TemplateBinding Background}" 
                                                                                BorderBrush="{TemplateBinding BorderBrush}" 
                                                                                BorderThickness="{TemplateBinding BorderThickness}" 
                                                                                ClipToBounds="True" />
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                                <Style.Triggers>
                                                                    <DataTrigger Binding="{i:Options MathDifficulty}" Value="0">
                                                                        <Setter Property="Background" Value="Green"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{i:Options MathDifficulty}" Value="1">
                                                                        <Setter Property="Background" Value="Yellow"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{i:Options MathDifficulty}" Value="2">
                                                                        <Setter Property="Background" Value="Orange"/>
                                                                    </DataTrigger>
                                                                    <DataTrigger Binding="{i:Options MathDifficulty}" Value="3">
                                                                        <Setter Property="Background" Value="Red"/>
                                                                    </DataTrigger>
                                                                </Style.Triggers>
                                                            </Style>
                                                        </Thumb.Style>
                                                    </Thumb>
                                                </Track.Thumb>
                                                <Track.IncreaseRepeatButton>
                                                    <RepeatButton 
                                                        x:Name="PART_IncreaseRepeatButton"  
                                                        Command="Slider.IncreaseLarge"
                                                        Height="4">
                                                        <RepeatButton.Style>
                                                            <Style TargetType="{x:Type RepeatButton}">
                                                                <Setter Property="OverridesDefaultStyle" Value="True" />
                                                                <Setter Property="Background" Value="#22000000" />
                                                                <Setter Property="BorderThickness" Value="0" />
                                                                <Setter Property="Focusable" Value="False" />
                                                                <Setter Property="IsTabStop" Value="False" />
                                                                <Setter Property="SnapsToDevicePixels" Value="True" />
                                                                <Setter Property="Template">
                                                                    <Setter.Value>
                                                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                                                            <Border 
                                                                                Background="{TemplateBinding Background}" 
                                                                                BorderBrush="{TemplateBinding BorderBrush}" 
                                                                                BorderThickness="{TemplateBinding BorderThickness}" 
                                                                                Width="{TemplateBinding Width}"
                                                                                Height="{TemplateBinding Height}" />
                                                                        </ControlTemplate>
                                                                    </Setter.Value>
                                                                </Setter>
                                                            </Style>
                                                        </RepeatButton.Style>
                                                    </RepeatButton>
                                                </Track.IncreaseRepeatButton>
                                            </Track>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsEnabled" Value="False">
                                        <Setter Property="Cursor" Value="Arrow" />
                                        <Setter Property="Opacity" Value="0.6" />
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Slider.Style>
                    </Slider>
                </GroupBox>
            </Grid>
            <Grid
                Grid.Row="1"
                Visibility="{Binding Set, Converter={StaticResource BooleanToVisibilityConverter}}">
                <Button
                    Command="{Binding SnoozeCommand}"
                    Margin="10,0,10,10"
                    Padding="0,12"
                    IsEnabled="{Binding Media.Playing, Mode=OneWay}">
                    <TextBlock
                        FontFamily="Franklin Gothic Demi"
                        FontSize="20"
                        Text="snooze"/>
                </Button>
            </Grid>
        </Grid>
        <i:PropertyGrid
            BorderThickness="0"
            DescriptionVisibility="Collapsed"
            GroupName="Category"
            GroupVisibility="True"
            HeaderVisibility="Collapsed"
            HeadersVisibility="None"
            Margin="0,0,0,10"
            Source="{i:Options}"
            Visibility="{Binding ViewOptions, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Grid>
</i:BaseWindow>