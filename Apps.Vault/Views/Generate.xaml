<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Vault"
    xmlns:i="http://imagin.tech/imagin/common"
    xmlns:System="clr-namespace:System;assembly=mscorlib">
    <DataTemplate DataType="{x:Type local:GeneratePanel}">
        <Grid>
            <Grid.Resources>
                <i:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
                <i:FileNameConverter x:Key="FileNameConverter"/>
                <i:Int32ToVisibilityConverter x:Key="Int32ToVisibilityConverter"/>
                <i:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
                <i:ObjectToTypeConverter x:Key="ObjectToTypeConverter"/>
                <i:SubstringConverter x:Key="SubstringConverter"/>
                <i:ToStringConverter x:Key="ToStringConverter"/>

                <i:Reference x:Key="GeneratePanel" Data="{Binding}"/>
            </Grid.Resources>
            <Grid i:GridExtensions.Rows="Auto,*,Auto">
                <Border Grid.Row="0"
                    Style="{DynamicResource Style.Border.Bottom}">
                    <Grid
                        i:GridExtensions.Columns="*,Auto,Auto,Auto,Auto,Auto,Auto,Auto"
                        i:PanelExtensions.Spacing="0,5,5,5"
                        i:PanelExtensions.SpacingExcept="Last">
                        <i:TextBox Grid.Column="0"
                            BorderThickness="0"
                            IsClearEnabled="True"
                            IsEnabled="{Binding Generating, Converter={StaticResource InverseBooleanConverter}}"
                            Padding="5,0"
                            Placeholder="{i:Loc Characters}"
                            Text="{i:Options GenerateCharacters, Mode=TwoWay}"
                            ToolTip="{Binding Text, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                        <i:MaskedToggleButton Grid.Column="1"
                            IsEnabled="{Binding Generating, Converter={StaticResource InverseBooleanConverter}}"
                            Source="{i:Image Vault, Images/Plus.png}"
                            ToolTip="{i:Loc Add}">
                            <i:MaskedToggleButton.Menu>
                                <ContextMenu>
                                    <ContextMenu.Resources>
                                        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type local:Characters}">
                                                    <Setter Property="Command" Value="{i:PanelBinding AddCharactersCommand, {x:Type local:GeneratePanel}}"/>
                                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContextMenu.Resources>
                                    <ContextMenu.ItemsSource>
                                        <CompositeCollection>
                                            <CollectionContainer Collection="{i:Enumerate {x:Type local:Characters}}"/>
                                            <Separator/>
                                            <MenuItem Header="Custom"
                                                ItemsSource="{i:Options GenerateCustomCharactersList}">
                                                <MenuItem.ItemContainerStyle>
                                                    <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                                        <Setter Property="Command" Value="{i:PanelBinding AddCustomCharactersCommand, {x:Type local:GeneratePanel}}"/>
                                                        <Setter Property="CommandParameter" Value="{Binding}"/>
                                                    </Style>
                                                </MenuItem.ItemContainerStyle>
                                            </MenuItem>
                                        </CompositeCollection>
                                    </ContextMenu.ItemsSource>
                                </ContextMenu>
                            </i:MaskedToggleButton.Menu>
                        </i:MaskedToggleButton>
                        <i:Line Grid.Column="2"
                            Orientation="Vertical"/>
                        <i:UInt32UpDown Grid.Column="3"
                            BorderThickness="0"
                            IsEnabled="{Binding Generating, Converter={StaticResource InverseBooleanConverter}}"
                            Minimum="1"
                            Padding="5,0"
                            ToolTip="{i:Loc Length}"
                            Value="{i:Options GenerateLength, Mode=TwoWay}"
                            VerticalAlignment="Center"/>
                        <i:Line Grid.Column="4"
                            Orientation="Vertical"/>
                        <i:MaskedToggleMenu Grid.Column="5"
                            IsChecked="{i:Options GenerateDistinct, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Source="{i:Image Vault, Images/Period.png}"
                            ToolTip="{i:Loc Distinct}"/>
                        <i:Line Grid.Column="6"
                            Orientation="Vertical"/>
                        <i:MaskedToggleButton Grid.Column="7"
                            IsEnabled="{Binding Generating, Converter={StaticResource InverseBooleanConverter}}"
                            Source="{i:Image Vault, Images/Clock.png}"
                            ToolTip="{i:Loc History}">
                            <i:MaskedToggleButton.Menu>
                                <ContextMenu>
                                    <ContextMenu.Resources>
                                        <Style TargetType="{x:Type MenuItem}" BasedOn="{StaticResource {x:Type MenuItem}}">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type System:String}">
                                                    <Setter Property="Command" Value="{Binding Data.FillCommand, Source={StaticResource GeneratePanel}}"/>
                                                    <Setter Property="CommandParameter" Value="{Binding}"/>
                                                    <Setter Property="Header" Value="{Binding Converter={StaticResource SubstringConverter}, ConverterParameter=24, Mode=OneWay}"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </ContextMenu.Resources>
                                    <ContextMenu.ItemsSource>
                                        <CompositeCollection>
                                            <CollectionContainer Collection="{i:Options GenerateHistory}"/>
                                            <MenuItem Header="{i:Loc None}" 
                                                FontStyle="Italic"
                                                IsEnabled="False"
                                                Visibility="{i:Options GenerateHistory.Count, Converter={StaticResource Int32ToVisibilityConverter}, ConverterParameter=1}"/>
                                            <Separator/>
                                            <MenuItem Header="{i:Loc Clear}"
                                                Command="{Binding Data.ClearHistoryCommand, Source={StaticResource GeneratePanel}}"
                                                Icon="{i:Image Vault, Images/X.png}"/>
                                        </CompositeCollection>
                                    </ContextMenu.ItemsSource>
                                </ContextMenu>
                            </i:MaskedToggleButton.Menu>
                        </i:MaskedToggleButton>
                    </Grid>
                </Border>
                <Grid Grid.Row="1">
                    <i:TextBox 
                        AcceptsReturn="True"
                        BorderThickness="0"
                        FontFamily="{i:Options GenerateFontFamily}"
                        FontSize="{i:Options GenerateFontSize, Mode=TwoWay}"
                        HorizontalAlignment="Stretch"
                        HorizontalContentAlignment="{i:Options GenerateHorizontalAlignment}"
                        IsReadOnly="True"
                        Padding="10"
                        ScrollViewer.VerticalScrollBarVisibility="Auto"
                        Text="{i:Options GenerateText, Mode=TwoWay}"
                        TextAlignment="Left"
                        TextWrapping="Wrap"
                        VerticalAlignment="Stretch"
                        VerticalContentAlignment="{i:Options GenerateVerticalAlignment}"
                        i:ControlExtensions.FontSizeWheel="True"
                        i:ControlExtensions.FontSizeWheelMaximum="72"
                        i:ControlExtensions.FontSizeWheelMinimum="8"/>
                    <i:ProgressRing 
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Visibility="{Binding Generating, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                </Grid>
                <Button Grid.Row="2"
                    Command="{Binding GenerateCommand}"
                    IsEnabled="{Binding Generating, Converter={StaticResource InverseBooleanConverter}}"
                    Margin="10"
                    Style="{DynamicResource Button.Green}"
                    ToolTip="{i:Loc Generate}">
                    <i:MaskedImage
                        Source="{i:Image Vault, Images/Refresh.png}"
                        SourceColor="White"/>
                </Button>
            </Grid>
        </Grid>
    </DataTemplate>
</ResourceDictionary>