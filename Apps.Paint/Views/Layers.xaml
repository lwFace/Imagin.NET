<ResourceDictionary 
    x:Class="Paint.LayersView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://imagin.tech/imagin/common" 
    xmlns:local="clr-namespace:Paint"
    xmlns:Adjust="clr-namespace:Paint.Adjust">
    <DataTemplate DataType="{x:Type local:LayersPanel}">
        <DataTemplate.Resources>
            <i:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
            <i:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter"/>
            <i:Int32ToDoubleConverter x:Key="Int32ToDoubleConverter"/>
            <i:ObjectToBooleanConverter x:Key="ObjectToBooleanConverter"/>
            <i:ObjectToTypeConverter x:Key="ObjectToTypeConverter"/>
            
            <ControlTemplate x:Key="TreeViewItem.Template" TargetType="TreeViewItem">
                <Grid i:GridExtensions.Columns="Auto,Auto,*" i:GridExtensions.Rows="Auto,Auto,*">
                    <Border
                        BorderBrush="#11000000"
                        BorderThickness="0,0,1,0"
                        Grid.RowSpan="2">
                        <i:MaskedToggleMenu
                            Grid.Column="0"
                            CheckedSource="{i:Image Paint, Images/Show.png}"
                            IsChecked="{Binding IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Margin="5,0"
                            Source="{i:Image Paint, Images/Hide.png}"
                            SourceColor="{DynamicResource Brush.Image}"/>
                    </Border>

                    <Border
                        Grid.Column="0"
                        Grid.ColumnSpan="3"
                        Grid.RowSpan="2"
                        BorderBrush="#11000000" 
                        BorderThickness="0,0,0,1" />
                                        
                    <Border 
                        Grid.Column="1" 
                        Grid.ColumnSpan="2"
                        Name="PART_Border" 
                        Background="{TemplateBinding Background}" 
                        SnapsToDevicePixels="True">
                    </Border>
                    <Grid
                        Grid.Column="1" 
                        Margin="{Binding IndexThickness, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}">
                        <ToggleButton 
                            x:Name="PART_Expander" 
                            Background="{TemplateBinding Foreground}" 
                            ClickMode="Press"
                            Focusable="False" 
                            Height="16" 
                            HorizontalAlignment="Left"
                            IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" 
                            Margin="5,0,0,0"
                            Width="16">
                            <ToggleButton.Style>
                                <Style TargetType="{x:Type ToggleButton}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="VerticalContentAlignment" Value="Center" />
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type ToggleButton}">
                                                <i:MaskedImage 
                                                    x:Name="PART_MaskedImage"
                                                    Source="{i:Image Imagin.Common.WPF, Images/ArrowDownSmall.png}"
                                                    SourceColor="{TemplateBinding Background}"
                                                    Width="{TemplateBinding Width}" 
                                                    Height="{TemplateBinding Height}" 
                                                    RenderTransformOrigin="0.5, 0.5"
                                                    SnapsToDevicePixels="True">
                                                    <i:MaskedImage.RenderTransform>
                                                        <RotateTransform Angle="-90"/>
                                                    </i:MaskedImage.RenderTransform>
                                                </i:MaskedImage>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsChecked" Value="True">
                                                        <Trigger.EnterActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="PART_MaskedImage" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="0" Duration="0:0:0.4"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.EnterActions>
                                                        <Trigger.ExitActions>
                                                            <BeginStoryboard>
                                                                <Storyboard>
                                                                    <DoubleAnimation Storyboard.TargetName="PART_MaskedImage" Storyboard.TargetProperty="(Path.RenderTransform).(RotateTransform.Angle)" To="-90" Duration="0:0:0.4"/>
                                                                </Storyboard>
                                                            </BeginStoryboard>
                                                        </Trigger.ExitActions>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                    </Grid>
                    <Grid 
                        Grid.Column="2" 
                        i:GridExtensions.Columns="*,Auto"
                        Margin="{TemplateBinding Padding}" >
                        <ContentPresenter
                            Grid.Column="0"
                            x:Name="PART_Header"
                            Content="{TemplateBinding Header}"
                            ContentTemplate="{TemplateBinding HeaderTemplate}"
                            ContentTemplateSelector="{TemplateBinding HeaderTemplateSelector}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        <i:MaskedToggleMenu
                            Grid.Column="1"
                            CheckedSource="{i:Image Paint, Images/Lock.png}"
                            IsChecked="{Binding IsLocked, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Source="{i:Image Paint, Images/Unlock.png}"
                            SourceColor="{TemplateBinding Foreground}"/>
                    </Grid>

                    <Expander 
                        x:Name="Adjustments"
                        Grid.Column="2"
                        Grid.Row="1"
                        Margin="0,5,0,7.5"
                        Visibility="{Binding Adjustments.Any, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Expander.Header>
                            <StackPanel Orientation="Horizontal">
                                <i:MaskedImage
                                    Margin="0,0,5,0"
                                    Source="{i:Image Paint, Images/Opacity.png}"/>
                                <TextBlock
                                    Text="{Binding Adjustments.Count, StringFormat={}Adjustments ({0})}"/>
                            </StackPanel>
                        </Expander.Header>
                        <ItemsControl
                            ItemsSource="{Binding Adjustments}"
                            Margin="25,0,0,0">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type Adjust:AdjustmentEffect}">
                                    <Grid 
                                        i:GridExtensions.Columns="Auto,*"
                                        VerticalAlignment="Center">
                                        <i:MaskedToggleMenu
                                            Grid.Column="0"
                                            CheckedSource="{i:Image Paint, Images/Show.png}"
                                            IsChecked="{Binding IsVisible, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                            Margin="0,0,5,0"
                                            Source="{i:Image Paint, Images/Hide.png}"/>
                                        <TextBlock
                                            Grid.Column="1"
                                            FontSize="12"
                                            HorizontalAlignment="Left"
                                            Text="{Binding Name}"/>
                                    </Grid>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Expander>

                    <ItemsPresenter 
                        Grid.Row="2" 
                        Grid.Column="0" 
                        Grid.ColumnSpan="3"
                        x:Name="ItemsHost"/>
                </Grid>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding Adjustments}" Value="{x:Null}">
                        <Setter TargetName="Adjustments" Property="Visibility" Value="Collapsed"/>
                    </DataTrigger>
                    
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="HasItems" Value="True"/>
                            <Condition Property="IsExpanded" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="HasItems" Value="True"/>
                            <Condition Property="IsExpanded" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="HasItems" Value="False"/>
                            <Condition Property="IsExpanded" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Visible"/>
                        <Setter TargetName="PART_Expander" Property="Visibility" Value="Collapsed"/>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="HasItems" Value="False"/>
                            <Condition Property="IsExpanded" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed"/>
                        <Setter TargetName="PART_Expander" Property="Visibility" Value="Collapsed"/>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="i:TreeViewItemExtensions.IsSelected" Value="False"/>
                            <Condition SourceName="PART_Border" Property="IsMouseOver" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Border" Property="Background" Value="Transparent"/>
                        <Setter Property="TextBlock.Foreground" Value="{DynamicResource Brush.Text}"/>
                    </MultiTrigger>
                    
                    <!-- 6d7d92 -->
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="i:TreeViewItemExtensions.IsSelected" Value="True"/>
                            <Condition Property="Selector.IsSelectionActive" Value="True"/>
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Border" Property="Background" Value="#007acc"/>
                        <Setter Property="TextBlock.Foreground" Value="#FFF"/>
                    </MultiTrigger>
                    <MultiTrigger>
                        <MultiTrigger.Conditions>
                            <Condition Property="i:TreeViewItemExtensions.IsSelected" Value="True"/>
                            <Condition Property="Selector.IsSelectionActive" Value="False"/>
                        </MultiTrigger.Conditions>
                        <Setter TargetName="PART_Border" Property="Background" Value="#007acc"/>
                        <Setter Property="TextBlock.Foreground" Value="#FFF"/>
                    </MultiTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>

        </DataTemplate.Resources> 
        <Grid>
            <Grid.Resources>
                <i:Reference x:Key="LayersViewModel" Data="{Binding .}"/>
            </Grid.Resources> 
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <ComboBox
                Grid.Row="0"
                BorderThickness="0,0,0,1"
                IsEnabled="{Binding SelectedLayer, Converter={StaticResource ObjectToBooleanConverter}}"
                ItemsSource="{i:Enumerate {x:Type local:BlendModes}}"
                SelectedItem="{Binding SelectedLayer.BlendMode, Mode=TwoWay}"
                ToolTip="Blend"/>
            <!-- SelectedValues="{Binding SelectedLayers, Mode=OneWayToSource}" -->
            <TreeView
                Grid.Row="1"
                BorderThickness="0"
                i:ItemsControlExtensions.SelectNoneOnEmptySpaceClick="True"
                ItemsSource="{Binding Layers, Mode=OneWay}"
                Padding="0"
                SelectedItemChanged="OnSelectedItemChanged">
                <TreeView.ItemContainerStyle>
                    <Style TargetType="{x:Type TreeViewItem}">
                        <Setter Property="ContextMenu">
                            <Setter.Value>
                                <ContextMenu>
                                    <MenuItem
                                        Command="{Binding Data.RasterizeCommand, Source={StaticResource LayersViewModel}}"
                                        CommandParameter="{Binding Mode=OneWay}"
                                        Header="Rasterize"/>
                                    <MenuItem
                                        Command="{Binding Data.RasterizeStyleCommand, Source={StaticResource LayersViewModel}}"
                                        CommandParameter="{Binding Mode=OneWay}"
                                        Header="Rasterize style"/>
                                    <Separator/>
                                    <MenuItem
                                        Command="{Binding Data.ClearStyleCommand, Source={StaticResource LayersViewModel}}"
                                        CommandParameter="{Binding Mode=OneWay}"
                                        Header="Clear style"/>
                                    <MenuItem
                                        Command="{Binding Data.CopyStyleCommand, Source={StaticResource LayersViewModel}}"
                                        CommandParameter="{Binding Mode=OneWay}"
                                        Header="Copy style"/>
                                    <MenuItem
                                        Command="{Binding Data.PasteStyleCommand, Source={StaticResource LayersViewModel}}"
                                        CommandParameter="{Binding Mode=OneWay}"
                                        Header="Paste style"/>
                                    <Separator/>
                                    <MenuItem
                                        Command="{Binding Data.FlattenCommand, Source={StaticResource LayersViewModel}}"
                                        Header="Flatten"/>
                                    <Separator/>
                                    <MenuItem
                                        Command="{Binding Data.MergeDownCommand, Source={StaticResource LayersViewModel}}"
                                        Header="Merge down"/>
                                    <MenuItem
                                        Command="{Binding Data.MergeUpCommand, Source={StaticResource LayersViewModel}}"
                                        Header="Merge up"/>
                                    <MenuItem
                                        Command="{Binding Data.MergeVisibleCommand, Source={StaticResource LayersViewModel}}"
                                        Header="Merge visible"/>
                                    <Separator/>
                                    <MenuItem
                                        Command="{Binding Data.MoveOutsideCommand, Source={StaticResource LayersViewModel}}"
                                        Header="Move outside"/>
                                    <Separator/>
                                    <MenuItem
                                        Command="{Binding Data.MoveDownCommand, Source={StaticResource LayersViewModel}}"
                                        Header="Move down"/>
                                    <MenuItem
                                        Command="{Binding Data.MoveUpCommand, Source={StaticResource LayersViewModel}}"
                                        Header="Move up"/>
                                    <Separator/>
                                    <MenuItem
                                        Command="{Binding Data.DuplicateCommand, Source={StaticResource LayersViewModel}}"
                                        Header="Duplicate"/>
                                    <MenuItem
                                        Command="{Binding Data.DeleteCommand, Source={StaticResource LayersViewModel}}"
                                        Header="Delete"/>
                                </ContextMenu>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                        <Setter Property="Padding" Value="5,4"/>
                        <Setter Property="OverridesDefaultStyle" Value="True" />
                        <Setter Property="Cursor" Value="Hand" />
                        <Setter Property="TextBlock.Foreground" Value="{DynamicResource Brush.Text}" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                        <Setter Property="i:TreeViewItemExtensions.IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                        <Setter Property="i:TreeViewItemExtensions.ExpandOnClick" Value="True" />
                        <Setter Property="i:TreeViewItemExtensions.CollapseSiblingsOnClick" Value="False" />
                        <Setter Property="i:TreeViewItemExtensions.SelectOnRightClick" Value="True" />
                        <Setter Property="i:TreeViewExtensions.SelectionMode" Value="Extended" />
                        <Setter Property="Opacity" Value="0" />
                        <Setter Property="Template" Value="{StaticResource TreeViewItem.Template}"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding Converter={StaticResource ObjectToTypeConverter}, Mode=OneWay}" Value="{x:Type local:GroupLayer}">
                                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                            </DataTrigger>
                            <EventTrigger RoutedEvent="TreeViewItem.Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1.0" Duration="0:0:0.5" AccelerationRatio="0.4" DecelerationRatio="0.4"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <Trigger Property="i:ControlExtensions.IsDraggingOver" Value="True">
                                <Setter Property="BorderBrush" Value="{DynamicResource Brush.DropTarget.Border}" />
                            </Trigger>
                        </Style.Triggers>
                    </Style>
                </TreeView.ItemContainerStyle>
                <TreeView.Resources>
                    <HierarchicalDataTemplate DataType="{x:Type local:AdjustmentLayer}">
                        <Grid
                            i:GridExtensions.Columns="Auto,*"
                            i:PanelExtensions.VerticalContentAlignment="Center"
                            Margin="0,2.5">
                            <i:MaskedImage
                                Grid.Column="0"
                                Margin="5,0"
                                Source="{i:Image Paint, Images/Opacity.png}"/>
                            <TextBlock
                                Grid.Column="1"
                                Margin="5,0,0,0"
                                Text="{Binding Adjustment.Name, Mode=OneWay}"
                                TextTrimming="CharacterEllipsis"/>
                        </Grid>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type local:GroupLayer}" ItemsSource="{Binding Layers}">
                        <Grid
                            i:GridExtensions.Columns="Auto,*"
                            i:PanelExtensions.VerticalContentAlignment="Center"
                            Margin="0,5">
                            <i:MaskedImage
                                Grid.Column="0"
                                Margin="5,0"
                                Source="{i:Image Paint, Images/Folder.png}"/>
                            <TextBlock
                                Grid.Column="1"
                                Margin="5,0,0,0"
                                Text="{Binding Name, Mode=OneWay}"
                                TextTrimming="CharacterEllipsis"/>
                        </Grid>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type local:PathLayer}">
                        <Grid
                            i:GridExtensions.Columns="Auto,*"
                            i:PanelExtensions.VerticalContentAlignment="Center"
                            Margin="0,5">
                            <i:MaskedImage
                                Grid.Column="0"
                                Margin="5,0"
                                Source="{i:Image Paint, Images/Path.png}"/>
                            <TextBlock
                                Grid.Column="1"
                                Margin="5,0,0,0"
                                Text="{Binding Name, Mode=OneWay}"
                                TextTrimming="CharacterEllipsis"/>
                        </Grid>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type local:VisualLayer}">
                        <Grid
                            i:GridExtensions.Columns="Auto,*,Auto"
                            i:PanelExtensions.VerticalContentAlignment="Center">
                            <Grid
                                Grid.Column="0"
                                Height="32"
                                Margin="5,0"
                                Width="32">
                                <ContentControl
                                    Content="{Binding Mode=OneWay}"
                                    Margin="2,3">
                                    <ContentControl.Resources>
                                        <DataTemplate x:Key="ShapeIcon">
                                            <Image
                                                Height="16"
                                                HorizontalAlignment="Right"
                                                Source="{i:Image Paint, Images/ShapeLayer.png}"
                                                VerticalAlignment="Bottom"
                                                Width="16"/>
                                        </DataTemplate>
                                        
                                        <DataTemplate DataType="{x:Type local:CustomShapeLayer}">
                                            <i:CheckerBoard
                                                BorderBrush="Black"
                                                BorderThickness="1">
                                                <Grid>
                                                    <Viewbox>
                                                        <Image 
                                                            Opacity="{Binding Opacity}"
                                                            RenderOptions.BitmapScalingMode="NearestNeighbor"
                                                            Source="{Binding Preview, Mode=OneWay}"/>
                                                    </Viewbox>
                                                    <ContentControl ContentTemplate="{StaticResource ShapeIcon}"/>
                                                </Grid>
                                            </i:CheckerBoard>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type local:EllipseLayer}">
                                            <i:CheckerBoard
                                                BorderBrush="Black"
                                                BorderThickness="1">
                                                <Grid>
                                                    <Viewbox>
                                                        <Ellipse
                                                            Fill="{Binding Fill}"
                                                            Height="{Binding Height, Converter={StaticResource Int32ToDoubleConverter}}"
                                                            Opacity="{Binding Opacity}"
                                                            Stroke="{Binding Stroke}"
                                                            StrokeThickness="{Binding StrokeThickness}"
                                                            Width="{Binding Width, Converter={StaticResource Int32ToDoubleConverter}}"/>
                                                    </Viewbox>
                                                    <ContentControl ContentTemplate="{StaticResource ShapeIcon}"/>
                                                </Grid>
                                            </i:CheckerBoard>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type local:LineLayer}">
                                            <i:CheckerBoard
                                                BorderBrush="Black"
                                                BorderThickness="1">
                                                <Grid>
                                                    <Viewbox>
                                                        <Image
                                                            Opacity="{Binding Opacity}"
                                                            RenderOptions.BitmapScalingMode="NearestNeighbor"
                                                            Source="{Binding Preview, Mode=OneWay}"/>
                                                    </Viewbox>
                                                    <ContentControl ContentTemplate="{StaticResource ShapeIcon}"/>
                                                </Grid>
                                            </i:CheckerBoard>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type local:PixelLayer}">
                                            <i:CheckerBoard
                                                BorderBrush="Black"
                                                BorderThickness="1">
                                                <Viewbox>
                                                    <Image 
                                                        Opacity="{Binding Opacity}"
                                                        RenderOptions.BitmapScalingMode="NearestNeighbor"
                                                        Source="{Binding Pixels, Mode=OneWay}"/>
                                                </Viewbox>
                                            </i:CheckerBoard>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type local:PolygonLayer}">
                                            <i:CheckerBoard
                                                BorderBrush="Black"
                                                BorderThickness="1">
                                                <Grid>
                                                    <Viewbox>
                                                        <Image 
                                                            Opacity="{Binding Opacity}"
                                                            RenderOptions.BitmapScalingMode="NearestNeighbor"
                                                            Source="{Binding Preview, Mode=OneWay}"/>
                                                    </Viewbox>
                                                    <ContentControl ContentTemplate="{StaticResource ShapeIcon}"/>
                                                </Grid>
                                            </i:CheckerBoard>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type local:RectangleLayer}">
                                            <i:CheckerBoard
                                                BorderBrush="Black"
                                                BorderThickness="1">
                                                <Grid>
                                                    <Viewbox>
                                                        <Rectangle
                                                            Fill="{Binding Fill}"
                                                            Height="{Binding Height, Converter={StaticResource Int32ToDoubleConverter}}"
                                                            Opacity="{Binding Opacity}"
                                                            Stroke="{Binding Stroke}"
                                                            StrokeThickness="{Binding StrokeThickness}"
                                                            Width="{Binding Width, Converter={StaticResource Int32ToDoubleConverter}}"/>
                                                    </Viewbox>
                                                    <ContentControl ContentTemplate="{StaticResource ShapeIcon}"/>
                                                </Grid>
                                            </i:CheckerBoard>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type local:RoundedRectangleLayer}">
                                            <i:CheckerBoard
                                                BorderBrush="Black"
                                                BorderThickness="1">
                                                <Grid>
                                                    <Viewbox>
                                                        <Border
                                                            Background="{Binding Fill}"
                                                            BorderBrush="{Binding Stroke}"
                                                            BorderThickness="{Binding StrokeThickness}"
                                                            CornerRadius="10"
                                                            Height="{Binding Height, Converter={StaticResource Int32ToDoubleConverter}}"
                                                            Opacity="{Binding Opacity}"
                                                            Width="{Binding Width, Converter={StaticResource Int32ToDoubleConverter}}"/>
                                                    </Viewbox>
                                                    <ContentControl ContentTemplate="{StaticResource ShapeIcon}"/>
                                                </Grid>
                                            </i:CheckerBoard>
                                        </DataTemplate>
                                        <DataTemplate DataType="{x:Type local:TextLayer}">
                                            <i:MaskedImage
                                                Source="{i:Image Paint, Images/Rename.png}"
                                                SourceColor="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"/>
                                        </DataTemplate>
                                    </ContentControl.Resources>
                                </ContentControl>
                                <Grid x:Name="PART_Border">
                                    <Border
                                        BorderBrush="White"
                                        BorderThickness="1,1,0,0"
                                        Height="7.5"
                                        Width="7.5"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"/>
                                    <Border
                                        BorderBrush="White"
                                        BorderThickness="0,1,1,0"
                                        Height="7.5"
                                        Width="7.5"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Top"/>
                                    <Border
                                        BorderBrush="White"
                                        BorderThickness="1,0,0,1"
                                        Height="7.5"
                                        Width="7.5"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Bottom"/>
                                    <Border
                                        BorderBrush="White"
                                        BorderThickness="0,0,1,1"
                                        Height="7.5"
                                        Width="7.5"
                                        HorizontalAlignment="Right"
                                        VerticalAlignment="Bottom"/>
                                </Grid>
                            </Grid>
                            <TextBlock
                                Grid.Column="1"
                                Margin="5,0,0,0"
                                Text="{Binding Name, Mode=OneWay}"
                                TextTrimming="CharacterEllipsis"/>
                            <i:MaskedImage
                                Grid.Column="2"
                                Margin="10,0"
                                Source="{i:Image Paint, Images/Opacity.png}"
                                SourceColor="{Binding Foreground, RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}}"
                                SourceHeight="12"
                                SourceWidth="12"
                                Visibility="{Binding Adjustments.Any, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </Grid>
                        <DataTemplate.Triggers>
                            <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                <Setter TargetName="PART_Border" Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding IsSelected}" Value="False">
                                <Setter TargetName="PART_Border" Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                        </DataTemplate.Triggers>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>
            <Border
                Grid.Row="2"
                Style="{DynamicResource Style.Border.Top}">
                <StackPanel
                    HorizontalAlignment="Right"
                    Margin="5"
                    Orientation="Horizontal" 
                    i:PanelExtensions.Spacing="15,0,0,0"
                    i:PanelExtensions.SpacingExcept="First">
                    <i:MaskedButton
                        Command="{Binding GroupCommand}"
                        Source="{i:Image Paint, Images/Folder.png}"
                        ToolTip="Group"/>
                    <i:MaskedButton
                        Command="{Binding DeleteCommand}"
                        Source="{i:Image Paint, Images/Trash.png}"
                        ToolTip="Delete"/>
                    <i:MaskedButton
                        Command="{Binding DuplicateCommand}"
                        Source="{i:Image Paint, Images/Copy.png}"
                        ToolTip="Duplicate"/>
                    <i:MaskedToggleButton
                        Source="{i:Image Paint, Images/Opacity.png}"
                        ToolTip="Add adjustment">
                        <i:MaskedToggleButton.Menu>
                            <ContextMenu
                                i:ItemsControlExtensions.SortName="Name"
                                i:ItemsControlExtensions.SortDirection="Ascending"
                                ItemsSource="{local:Model Adjustments, {x:Type local:MainViewModel}}">
                                <ContextMenu.ItemContainerStyle>
                                    <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                        <Setter Property="Command" Value="{Binding Data.AddAdjustmentCommand, Source={StaticResource LayersViewModel}}"/>
                                        <Setter Property="CommandParameter" Value="{Binding .}"/>
                                    </Style>
                                </ContextMenu.ItemContainerStyle>
                                <ContextMenu.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}"/>
                                    </DataTemplate>
                                </ContextMenu.ItemTemplate>
                            </ContextMenu>
                        </i:MaskedToggleButton.Menu>
                    </i:MaskedToggleButton>
                    <i:MaskedButton
                        Command="{Binding AddCommand}"
                        Source="{i:Image Paint, Images/Plus.png}"
                        ToolTip="Add"/>
                </StackPanel>
            </Border>
        </Grid>
    </DataTemplate>
</ResourceDictionary>