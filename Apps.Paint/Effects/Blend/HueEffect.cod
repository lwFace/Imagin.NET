//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   sampler2D blend;
//   sampler2D input;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   input        s0       1
//   blend        s1       1
//

    ps_3_0
    def c0, 2, 4, 0.166666672, 1
    def c1, 0.333333343, 1.33333337, -0.666666627, 1
    def c2, 6, -0.166666672, -0.5, -0.666666687
    def c3, 0.5, -1, 2, 0
    dcl_texcoord v0.xy  // uv<0,1>
    dcl_2d s0
    dcl_2d s1

#line 117 "C:\Users\james\OneDrive\Development\Software\Library\Imagin.NET\Apps.Paint\Blend\HueEffect.fx"
    texld r0, v0, s0  // ::inputColor<0,1,2,3>

#line 120
    texld r1, v0, s1  // ::blendColor<0,1,2,3>

#line 21
    add r2.x, -r0.y, r0.x
    cmp r2.xy, r2.x, r0.yxzw, r0
    min r3.x, r0.z, r2.x  // ::fmin<0>
    max r3.y, r2.y, r0.z  // ::fmax<0>
    add r2.x, -r3.x, r3.y  // ::delta<0>
    add r2.y, r3.x, r3.y  // ::maxplusmin<0>

#line 27
    mul r3.xyz, r2.y, c3.x  // ::hsl<2,2,2>

#line 40
    add r2.z, r2.y, c3.y
    rcp r2.w, r2.y
    mul r2.w, r2.w, r2.x  // ::hsl<1>
    add r3.w, -r2.y, c3.z
    rcp r3.w, r3.w
    mul r3.w, r2.x, r3.w  // ::hsl<1>
    cmp r2.w, r2.z, r3.w, r2.w  // ::hsl<1>

#line 56
    cmp r2.x, -r2_abs.x, c3.w, r2.w  // ::hsl<1>

#line 86
    if_eq r2.x, c3.w

#line 89
    else

#line 127
      rcp r2.w, r1.w
      mul_sat r1.xyz, r1.zyxw, r2.w  // ::blendColor<2,1,0>

#line 48
      add r4.xyz, -r1.zxyw, r1

#line 22
      cmp r5.xy, r4.z, r1.yzzw, r1.zyzw
      min r2.w, r1.x, r5.x  // ::fmin<0>
      max r3.w, r5.y, r1.x  // ::fmax<0>
      add r1.x, -r2.w, r3.w  // ::delta<0>

#line 47
      add r1.yz, r1.xzyw, -r3.w
      rcp r2.w, r1.x

#line 50
      mul r3.w, r2.w, r4.y  // ::hsl<0>
      mad r4.xy, r4.xzzw, r2.w, c0  // ::hsl<0,0>
      cmp r1.z, -r1_abs.z, r4.x, r4.y  // ::hsl<0>
      cmp r1.y, -r1_abs.y, r3.w, r1.z  // ::hsl<0>
      mul r1.z, r1.y, c0.z  // ::hsl<0>

#line 55
      mad r2.w, r1.y, c0.z, c0.w  // ::hsl<0>
      cmp r1.y, r1.y, r1.z, r2.w  // ::hsl<0>
      cmp r1.x, -r1_abs.x, c3.w, r1.y  // ::hsl<0>

#line 94
      add r1.y, r2.x, -c3.y
      mul r1.y, r1.y, r3.z  // ::temp2<0>
      mad r1.z, r2.y, c3.x, r2.x
      mad r1.z, r2.x, -r3.z, r1.z  // ::temp2<0>
      cmp r1.y, r2.z, r1.z, r1.y  // ::temp2<0>
      add r1.z, -r1.y, r2.y  // ::temp1<0>

#line 64
      add r2, r1.x, c1  // HueToRGB::temp3<0,0,0,0>
      add r3.w, -r2.x, -c3.y
      cmp r2.z, r3.w, r2.x, r2.z  // HueToRGB::temp3<0>
      cmp r2.x, r2.x, r2.z, r2.y  // HueToRGB::temp3<0>

#line 71
      add r2.y, -r1.z, r1.y
      mul r2.z, r2.y, c2.x
      mad r3.w, r2.z, r2.x, r1.z  // ::rgbComponent<0>

#line 74
      add r4.xyz, r2.x, c2.yzww
      add r2.x, -r2.x, -c2.w
      mul r2.x, r2.x, r2.y
      mad r2.x, r2.x, c2.x, r1.z  // ::rgbComponent<0>
      cmp r2.x, r4.z, r1.z, r2.x  // ::rgbComponent<0>
      cmp r2.x, r4.y, r2.x, r1.y  // ::rgbComponent<0>
      cmp r3.x, r4.x, r2.x, r3.w  // ::rgbComponent<0>

#line 65
      add r2.x, -r1.x, -c3.y
      add r4, r1.x, -c1.wxzy  // HueToRGB::temp3<0,0,0,0>
      cmp r2.x, r2.x, r1.x, r4.x  // HueToRGB::temp3<0>
      cmp r1.x, r1.x, r2.x, r2.w  // HueToRGB::temp3<0>

#line 71
      mad r2.x, r2.z, r1.x, r1.z  // ::rgbComponent<0>

#line 74
      add r5.xyz, r1.x, c2.yzww
      add r1.x, -r1.x, -c2.w
      mul r1.x, r1.x, r2.y
      mad r1.x, r1.x, c2.x, r1.z  // ::rgbComponent<0>
      cmp r1.x, r5.z, r1.z, r1.x  // ::rgbComponent<0>
      cmp r1.x, r5.y, r1.x, r1.y  // ::rgbComponent<0>
      cmp r3.y, r5.x, r1.x, r2.x  // ::rgbComponent<0>

#line 65
      add r1.x, -r4.y, -c3.y
      cmp r1.x, r1.x, r4.y, r4.w  // HueToRGB::temp3<0>
      cmp r1.x, r4.y, r1.x, r4.z  // HueToRGB::temp3<0>

#line 71
      mad r2.x, r2.z, r1.x, r1.z  // ::rgbComponent<0>

#line 74
      add r4.xyz, r1.x, c2.yzww
      add r1.x, -r1.x, -c2.w
      mul r1.x, r1.x, r2.y
      mad r1.x, r1.x, c2.x, r1.z  // ::rgbComponent<0>
      cmp r1.x, r4.z, r1.z, r1.x  // ::rgbComponent<0>
      cmp r1.x, r4.y, r1.x, r1.y  // ::rgbComponent<0>
      cmp r3.z, r4.x, r1.x, r2.x  // ::rgbComponent<0>

#line 103
    endif

#line 135
    lrp oC0.xyz, r1.w, r3, r0  // ::main<0,1,2>
    mov oC0.w, r0.w  // ::main<3>

// approximately 84 instruction slots used (2 texture, 82 arithmetic)
