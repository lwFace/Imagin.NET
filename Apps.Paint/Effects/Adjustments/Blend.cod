//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
// Parameters:
//
//   float Alpha;
//   float4 Color;
//   float Mode;
//   sampler2D input;
//
//
// Registers:
//
//   Name         Reg   Size
//   ------------ ----- ----
//   Color        c0       1
//   Alpha        c1       1
//   Mode         c2       1
//   input        s0       1
//

    ps_3_0
    def c3, 0.00100000005, 0, 1, 0.5
    def c4, 2, 3, 4, 0.166666672
    def c5, 1, 0.333333343, 1.33333337, -0.666666627
    def c6, 0.166666672, 1, 6, 0.666666687
    def c7, 1, -1, -0.333333343, 0.666666627
    def c8, 24, -25, 0, 0
    def c9, -0.166666672, -0.5, -0.666666687, 5
    def c10, 7, 8, 2, 1
    def c11, 9, 2, -1, 10
    def c12, 11, 12, 13, 14
    def c13, 15, 16, 17, 19
    def c14, 20, 21, 22, 23
    dcl_texcoord v0.xy  // uv<0,1>
    dcl_2d s0

#line 582 "C:\Users\james\OneDrive\Development\Software\Library\Imagin.NET\Apps.Paint\Adjust\Blend.fx"
    texld r0, v0, s0  // ::color<0,1,2,3>

#line 127
    abs r1.x, c1.x
    mov r2.xyz, c3
    cmp r1.x, -r1.x, r2.x, c1.x  // Blend::blendColor<3>

#line 130
    abs r1.yzw, c0.xxyz
    cmp r1.yzw, -r1, r2.x, c0.xxyz  // Blend::blendColor<0,1,2>

#line 136
    if_eq c2.x, r2.y

#line 139
      rcp r2.x, r1.x
      mul_sat r2.xyw, r1.yzzw, r2.x  // Blend::blendColor<0,1,2>

#line 142
      add r2.xyw, r0.xyzz, r2
      mul r2.xyw, r1.x, r2

#line 145
      add r3.x, -r1.x, c3.z
      mul r2.xyw, r2, c3.w
      mad r0.xyz, r3.x, r0, r2.xyww  // ::result<0,1,2>
    else
      if_eq c2.x, r2.z

#line 151
        rcp r2.x, r1.x
        mul_sat r2.xyz, r1.yzww, r2.x  // Blend::blendColor<0,1,2>

#line 155
        add r3.xyz, -r0, c3.z
        rcp r4.x, r2.x
        rcp r4.y, r2.y
        rcp r4.z, r2.z
        mad_sat r2.xyz, r3, -r4, c3.z  // ::result<0,1,2>

#line 158
        lrp r3.xyz, r1.x, r2, r0  // ::result<0,1,2>
        mov r0.xyz, r3  // ::result<0,1,2>
      else
        mov r2.x, c2.x  // ::Mode<0>
        if_eq r2.x, c4.x

#line 164
          rcp r2.y, r1.x
          mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 170
          add r3.xyz, r2.yzww, -c3.z
          add r4.xyz, -r2.yzww, c3.z
          rcp r3.w, r4.x
          mul r3.w, r0.x, r3.w
          min r4.x, r3.w, c3.z
          cmp r5.x, r3.x, r2.y, r4.x  // ::result<0>
          rcp r2.y, r4.y
          mul r2.y, r0.y, r2.y
          min r3.x, r2.y, c3.z
          cmp r5.y, r3.y, r2.z, r3.x  // ::result<1>
          rcp r2.y, r4.z
          mul r2.y, r0.z, r2.y
          min r3.x, r2.y, c3.z
          cmp r5.z, r3.z, r2.w, r3.x  // ::result<2>

#line 173
          lrp r2.yzw, r1.x, r5.xxyz, r0.xxyz  // ::result<0,1,2>
          mov r0.xyz, r2.yzww  // ::result<0,1,2>
        else
          if_eq r2.x, c4.y

#line 179
            rcp r2.y, r1.x
            mul_sat r2.yzw, r1.xwzy, r2.y  // Blend::blendColor<2,1,0>

#line 47
            add r3.xyz, -r2.wyzw, r2.yzww

#line 21
            cmp r4.xy, r3.z, r2.zwzw, r2.wzzw
            min r3.w, r2.y, r4.x  // ::fmin<0>
            max r5.x, r4.y, r2.y  // ::fmax<0>
            add r2.y, -r3.w, r5.x  // ::delta<0>
            add r3.w, r3.w, r5.x  // ::maxplusmin<0>

#line 39
            add r4.x, r3.w, -c3.z
            rcp r4.y, r3.w
            mul r4.y, r2.y, r4.y  // ::hsl<1>
            add r3.w, -r3.w, c4.x
            rcp r3.w, r3.w
            mul r3.w, r2.y, r3.w  // ::hsl<1>
            cmp r4.x, r4.x, r3.w, r4.y  // ::hsl<1>

#line 46
            add r2.zw, r2.xywz, -r5.x
            rcp r3.w, r2.y

#line 49
            mul r3.y, r3.w, r3.y  // ::hsl<0>
            mad r3.xz, r3, r3.w, c4  // ::hsl<0,0>
            cmp r2.w, -r2_abs.w, r3.x, r3.z  // ::hsl<0>
            cmp r2.z, -r2_abs.z, r3.y, r2.w  // ::hsl<0>
            mul r2.w, r2.z, c4.w  // ::hsl<0>

#line 54
            mad r3.x, r2.z, c6.x, c6.y  // ::hsl<0>
            cmp r4.yzw, r2.z, r2.w, r3.x  // ::hsl<0,0,0>
            cmp r3, -r2_abs.y, c3.y, r4  // ::hsl<1,0,0,0>

#line 20
            add r2.y, -r0.y, r0.x
            cmp r2.yz, r2.y, r0.xyxw, r0.xxyw
            min r4.x, r0.z, r2.y  // ::fmin<0>
            max r4.y, r2.z, r0.z  // ::fmax<0>
            add r2.y, r4.x, r4.y  // ::maxplusmin<0>

#line 26
            mul r4.xyz, r2.y, c3.w  // ::hsl<2,2,2>

#line 85
            if_eq r3.x, c3.y

#line 88
            else

#line 92
              add r2.z, r2.y, -c3.z

#line 65
              add r5, r3, c5  // HueToRGB::temp3<0,0,0>

#line 93
              mul r2.w, r4.z, r5.x  // ::temp2<0>
              mad r3.y, r2.y, c3.w, r3.x
              mad r3.x, r3.x, -r4.z, r3.y  // ::temp2<0>
              cmp r2.z, r2.z, r3.x, r2.w  // ::temp2<0>
              add r2.y, -r2.z, r2.y  // ::temp1<0>

#line 64
              add r2.w, -r5.y, c3.z
              cmp r2.w, r2.w, r5.y, r5.w  // HueToRGB::temp3<0>
              cmp r2.w, r5.y, r2.w, r5.z  // HueToRGB::temp3<0>

#line 70
              add r3.x, -r2.y, r2.z
              mul r3.y, r3.x, c6.z
              mad r3.z, r3.y, r2.w, r2.y  // ::rgbComponent<0>

#line 73
              add r5.xyz, r2.w, c9
              add r2.w, -r2.w, c6.w
              mul r2.w, r2.w, r3.x
              mad r2.w, r2.w, c6.z, r2.y  // ::rgbComponent<0>
              cmp r2.w, r5.z, r2.y, r2.w  // ::rgbComponent<0>
              cmp r2.w, r5.y, r2.w, r2.z  // ::rgbComponent<0>
              cmp r4.x, r5.x, r2.w, r3.z  // ::rgbComponent<0>

#line 64
              add r2.w, -r3.w, c3.z
              add r5, r3.w, c7  // HueToRGB::temp3<0,0,0,0>
              cmp r2.w, r2.w, r3.w, r5.y  // HueToRGB::temp3<0>
              cmp r2.w, r3.w, r2.w, r5.x  // HueToRGB::temp3<0>

#line 70
              mad r3.z, r3.y, r2.w, r2.y  // ::rgbComponent<0>

#line 73
              add r6.xyz, r2.w, c9
              add r2.w, -r2.w, c6.w
              mul r2.w, r2.w, r3.x
              mad r2.w, r2.w, c6.z, r2.y  // ::rgbComponent<0>
              cmp r2.w, r6.z, r2.y, r2.w  // ::rgbComponent<0>
              cmp r2.w, r6.y, r2.w, r2.z  // ::rgbComponent<0>
              cmp r4.y, r6.x, r2.w, r3.z  // ::rgbComponent<0>

#line 64
              add r2.w, -r5.z, c3.z
              add r3.z, r3.w, -c5.z  // HueToRGB::temp3<0>
              cmp r2.w, r2.w, r5.z, r3.z  // HueToRGB::temp3<0>
              cmp r2.w, r5.z, r2.w, r5.w  // HueToRGB::temp3<0>

#line 70
              mad r3.y, r3.y, r2.w, r2.y  // ::rgbComponent<0>

#line 73
              add r5.xyz, r2.w, c9
              add r2.w, -r2.w, c6.w
              mul r2.w, r2.w, r3.x
              mad r2.w, r2.w, c6.z, r2.y  // ::rgbComponent<0>
              cmp r2.y, r5.z, r2.y, r2.w  // ::rgbComponent<0>
              cmp r2.y, r5.y, r2.y, r2.z  // ::rgbComponent<0>
              cmp r4.z, r5.x, r2.y, r3.y  // ::rgbComponent<0>

#line 102
            endif

#line 186
            lrp r2.yzw, r1.x, r4.xxyz, r0.xxyz  // ::result<0,1,2>
            mov r0.xyz, r2.yzww  // ::result<0,1,2>
          else
            if_eq r2.x, c4.z

#line 192
              rcp r2.y, r1.x
              mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 210
              min r3.xyz, r0, r2.yzww  // ::result<0,1,2>

#line 213
              lrp r2.yzw, r1.x, r3.xxyz, r0.xxyz  // ::result<0,1,2>
              mov r0.xyz, r2.yzww  // ::result<0,1,2>
            else
              if_eq r2.x, c9.w

#line 219
                rcp r2.y, r1.x
                mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 223
                add r2.yzw, r0.xxyz, -r2

#line 226
                lrp r3.xyz, r1.x, r2_abs.yzww, r0  // ::result<0,1,2>
                mov r0.xyz, r3  // ::result<0,1,2>
              else
                if_eq r2.x, c6.z

#line 232
                  rcp r2.y, r1.x
                  mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 236
                  add r3.xyz, r0, -c3.w
                  add r3.xyz, r3, r3
                  add r2.yzw, r2, -c3.w
                  mad r2.yzw, r3.xxyz, -r2, c3.w  // ::result<0,1,2>

#line 239
                  lrp r3.xyz, r1.x, r2.yzww, r0  // ::result<0,1,2>
                  mov r0.xyz, r3  // ::result<0,1,2>
                else
                  if_eq r2.x, c10.x

#line 245
                    rcp r2.y, r1.x
                    mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 250
                    add r3.xyz, r0, -c3.z
                    mul r2.yzw, r2, r2
                    add r4.xyz, -r0, c3.z
                    rcp r3.w, r4.x
                    mul r2.y, r2.y, r3.w
                    min r3.w, r2.y, c3.z
                    cmp r5.x, -r3_abs.x, r0.x, r3.w  // ::result<0>
                    rcp r2.y, r4.y
                    mul r2.y, r2.y, r2.z
                    min r3.x, r2.y, c3.z
                    cmp r5.y, -r3_abs.y, r0.y, r3.x  // ::result<1>
                    rcp r2.y, r4.z
                    mul r2.y, r2.y, r2.w
                    min r3.x, r2.y, c3.z
                    cmp r5.z, -r3_abs.z, r0.z, r3.x  // ::result<2>

#line 253
                    lrp r2.yzw, r1.x, r5.xxyz, r0.xxyz  // ::result<0,1,2>
                    mov r0.xyz, r2.yzww  // ::result<0,1,2>
                  else
                    if_eq r2.x, c10.y

#line 259
                      rcp r2.y, r1.x
                      mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 276
                      add r3.xyz, -r2.yzww, c3.w
                      add r4.xyz, -r0, c3.z
                      add r5.xyz, r2.yzww, -c3.w
                      mad r5.xyz, r5, -c10.z, c10.w
                      mad r4.xyz, r4, -r5, c3.z  // ::result<0,1,2>

#line 268
                      dp2add r2.y, r0.x, r2.y, c3.y  // ::result<0>
                      cmp r5.x, r3.x, r2.y, r4.x  // ::result<0>

#line 274
                      dp2add r2.y, r0.y, r2.z, c3.y  // ::result<1>
                      cmp r5.y, r3.y, r2.y, r4.y  // ::result<1>

#line 280
                      dp2add r2.y, r0.z, r2.w, c3.y  // ::result<2>
                      cmp r5.z, r3.z, r2.y, r4.z  // ::result<2>

#line 283
                      lrp r2.yzw, r1.x, r5.xxyz, r0.xxyz  // ::result<0,1,2>
                      mov r0.xyz, r2.yzww  // ::result<0,1,2>
                    else
                      if_eq r2.x, c11.x

#line 289
                        rcp r2.y, r1.x
                        mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 294
                        add r3.xyz, r2.yzww, -c3.w
                        add r2.yzw, r2, r2
                        add r4.xyz, -r0, c3.z
                        rcp r3.w, r2.y
                        mad r3.w, r4.x, -r3.w, c3.z
                        max r4.x, r3.w, c3.y
                        cmp r2.y, -r2.y, r2.y, r4.x
                        add r5.xyz, r3, r3
                        mad r6.xyz, r3, c11.y, c11.z
                        mad r7.xyz, r3, -c10.z, c10.w
                        rcp r3.w, r7.x
                        mul r3.w, r0.x, r3.w
                        min r4.x, r3.w, c3.z
                        cmp r3.w, r6.x, r5.x, r4.x
                        cmp r2.y, r3.x, r3.w, r2.y
                        add r2.y, r2.y, -c3.w
                        cmp r8.x, r2.y, c3.z, c3.y  // ::result<0>
                        rcp r2.y, r2.z
                        mad r2.y, r4.y, -r2.y, c3.z
                        max r3.x, r2.y, c3.y
                        cmp r2.y, -r2.z, r2.z, r3.x
                        rcp r2.z, r7.y
                        mul r2.z, r0.y, r2.z
                        min r3.x, r2.z, c3.z
                        cmp r2.z, r6.y, r5.y, r3.x
                        cmp r2.y, r3.y, r2.z, r2.y
                        add r2.y, r2.y, -c3.w
                        cmp r8.y, r2.y, c3.z, c3.y  // ::result<1>
                        rcp r2.y, r2.w
                        mad r2.y, r4.z, -r2.y, c3.z
                        max r3.x, r2.y, c3.y
                        cmp r2.y, -r2.w, r2.w, r3.x
                        rcp r2.z, r7.z
                        mul r2.z, r0.z, r2.z
                        min r3.x, r2.z, c3.z
                        cmp r2.z, r6.z, r5.z, r3.x
                        cmp r2.y, r3.z, r2.z, r2.y
                        add r2.y, r2.y, -c3.w
                        cmp r8.z, r2.y, c3.z, c3.y  // ::result<2>

#line 297
                        lrp r2.yzw, r1.x, r8.xxyz, r0.xxyz  // ::result<0,1,2>
                        mov r0.xyz, r2.yzww  // ::result<0,1,2>
                      else
                        if_eq r2.x, c11.w

#line 20
                          add r2.y, -r0.y, r0.x
                          cmp r2.yz, r2.y, r0.xyxw, r0.xxyw
                          min r3.x, r0.z, r2.y  // ::fmin<0>
                          max r3.y, r2.z, r0.z  // ::fmax<0>
                          add r2.y, -r3.x, r3.y  // ::delta<0>
                          add r2.z, r3.x, r3.y  // ::maxplusmin<0>

#line 26
                          mul r3.xyz, r2.z, c3.w  // ::hsl<2,2,2>

#line 39
                          add r2.w, r2.z, -c3.z
                          rcp r3.w, r2.z
                          mul r3.w, r2.y, r3.w  // ::hsl<1>
                          add r4.x, -r2.z, c4.x
                          rcp r4.x, r4.x
                          mul r4.x, r2.y, r4.x  // ::hsl<1>
                          cmp r3.w, r2.w, r4.x, r3.w  // ::hsl<1>

#line 55
                          cmp r2.y, -r2_abs.y, c3.y, r3.w  // ::hsl<1>

#line 85
                          if_eq r2.y, c3.y

#line 88
                          else

#line 303
                            rcp r3.w, r1.x
                            mul_sat r4.xyz, r1.wzyw, r3.w  // Blend::blendColor<2,1,0>

#line 47
                            add r5.xyz, -r4.zxyw, r4

#line 21
                            cmp r6.xy, r5.z, r4.yzzw, r4.zyzw
                            min r3.w, r4.x, r6.x  // ::fmin<0>
                            max r5.w, r6.y, r4.x  // ::fmax<0>
                            add r3.w, -r3.w, r5.w  // ::delta<0>

#line 46
                            add r4.xy, r4.zyzw, -r5.w
                            rcp r4.z, r3.w

#line 49
                            mul r4.w, r4.z, r5.y  // ::hsl<0>
                            mad r5.xy, r5.xzzw, r4.z, c4.xzzw  // ::hsl<0,0>
                            cmp r4.y, -r4_abs.y, r5.x, r5.y  // ::hsl<0>
                            cmp r4.x, -r4_abs.x, r4.w, r4.y  // ::hsl<0>
                            mul r4.y, r4.x, c4.w  // ::hsl<0>

#line 54
                            mad r4.z, r4.x, c6.x, c6.y  // ::hsl<0>
                            cmp r4.x, r4.x, r4.y, r4.z  // ::hsl<0>
                            cmp r3.w, -r3_abs.w, c3.y, r4.x  // ::hsl<0>

#line 93
                            add r4.x, r2.y, c3.z
                            mul r4.x, r3.z, r4.x  // ::temp2<0>
                            mad r4.y, r2.z, c3.w, r2.y
                            mad r2.y, r2.y, -r3.z, r4.y  // ::temp2<0>
                            cmp r2.y, r2.w, r2.y, r4.x  // ::temp2<0>
                            add r2.z, -r2.y, r2.z  // ::temp1<0>

#line 63
                            add r4, r3.w, c5.yzwx  // HueToRGB::temp3<0,0,0,0>
                            add r2.w, -r4.x, c3.z
                            cmp r2.w, r2.w, r4.x, r4.z  // HueToRGB::temp3<0>
                            cmp r2.w, r4.x, r2.w, r4.y  // HueToRGB::temp3<0>

#line 70
                            add r4.x, -r2.z, r2.y
                            mul r4.y, r4.x, c6.z
                            mad r4.z, r4.y, r2.w, r2.z  // ::rgbComponent<0>

#line 73
                            add r5.xyz, r2.w, c9
                            add r2.w, -r2.w, c6.w
                            mul r2.w, r2.w, r4.x
                            mad r2.w, r2.w, c6.z, r2.z  // ::rgbComponent<0>
                            cmp r2.w, r5.z, r2.z, r2.w  // ::rgbComponent<0>
                            cmp r2.w, r5.y, r2.w, r2.y  // ::rgbComponent<0>
                            cmp r3.x, r5.x, r2.w, r4.z  // ::rgbComponent<0>

#line 64
                            add r2.w, -r3.w, c3.z
                            add r5, r3.w, -c5.xywz  // HueToRGB::temp3<0,0,0,0>
                            cmp r2.w, r2.w, r3.w, r5.x  // HueToRGB::temp3<0>
                            cmp r2.w, r3.w, r2.w, r4.w  // HueToRGB::temp3<0>

#line 70
                            mad r3.w, r4.y, r2.w, r2.z  // ::rgbComponent<0>

#line 73
                            add r6.xyz, r2.w, c9
                            add r2.w, -r2.w, c6.w
                            mul r2.w, r2.w, r4.x
                            mad r2.w, r2.w, c6.z, r2.z  // ::rgbComponent<0>
                            cmp r2.w, r6.z, r2.z, r2.w  // ::rgbComponent<0>
                            cmp r2.w, r6.y, r2.w, r2.y  // ::rgbComponent<0>
                            cmp r3.y, r6.x, r2.w, r3.w  // ::rgbComponent<0>

#line 64
                            add r2.w, -r5.y, c3.z
                            cmp r2.w, r2.w, r5.y, r5.w  // HueToRGB::temp3<0>
                            cmp r2.w, r5.y, r2.w, r5.z  // HueToRGB::temp3<0>

#line 70
                            mad r3.w, r4.y, r2.w, r2.z  // ::rgbComponent<0>

#line 73
                            add r4.yzw, r2.w, c9.xxyz
                            add r2.w, -r2.w, c6.w
                            mul r2.w, r2.w, r4.x
                            mad r2.w, r2.w, c6.z, r2.z  // ::rgbComponent<0>
                            cmp r2.z, r4.w, r2.z, r2.w  // ::rgbComponent<0>
                            cmp r2.y, r4.z, r2.z, r2.y  // ::rgbComponent<0>
                            cmp r3.z, r4.y, r2.y, r3.w  // ::rgbComponent<0>

#line 102
                          endif

#line 309
                          lrp r2.yzw, r1.x, r3.xxyz, r0.xxyz  // ::result<0,1,2>
                          mov r0.xyz, r2.yzww  // ::result<0,1,2>
                        else
                          if_eq r2.x, c12.x

#line 315
                            rcp r2.y, r1.x
                            mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 334
                            max r3.xyz, r0, r2.yzww  // ::result<0,1,2>

#line 337
                            lrp r2.yzw, r1.x, r3.xxyz, r0.xxyz  // ::result<0,1,2>
                            mov r0.xyz, r2.yzww  // ::result<0,1,2>
                          else
                            if_eq r2.x, c12.y

#line 343
                              rcp r2.y, r1.x
                              mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 347
                              add r2.yzw, r0.xxyz, r2
                              add_sat r2.yzw, r2, -c3.z  // ::result<0,1,2>

#line 350
                              lrp r3.xyz, r1.x, r2.yzww, r0  // ::result<0,1,2>
                              mov r0.xyz, r3  // ::result<0,1,2>
                            else
                              if_eq r2.x, c12.z

#line 356
                                rcp r2.y, r1.x
                                mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 360
                                add r2.yzw, r0.xxyz, r2  // ::result<0,1,2>

#line 363
                                lrp r3.xyz, r1.x, r2.yzww, r0  // ::result<0,1,2>
                                mov r0.xyz, r3  // ::result<0,1,2>
                              else
                                if_eq r2.x, c12.w

#line 369
                                  rcp r2.y, r1.x
                                  mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 386
                                  add r3.xyz, -r2.yzww, c3.w
                                  add r4.xyz, r2.yzww, -c3.w
                                  mad r4.xyz, r4, c4.x, r0  // ::result<0,1,2>
                                  mad r2.yzw, r2, c4.x, r0.xxyz
                                  add r2.yzw, r2, -c3.z  // ::result<0,1,2>
                                  cmp r2.yzw, r3.xxyz, r2, r4.xxyz  // ::result<0,1,2>

#line 393
                                  lrp r3.xyz, r1.x, r2.yzww, r0  // ::result<0,1,2>
                                  mov r0.xyz, r3  // ::result<0,1,2>
                                else
                                  if_eq r2.x, c13.x

#line 399
                                    rcp r2.y, r1.x
                                    mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 47
                                    add r3.xyz, -r0.xzyw, r0.zyxw

#line 21
                                    cmp r4.xy, r3.z, r0.yxzw, r0
                                    min r3.w, r0.z, r4.x  // ::fmin<0>
                                    max r5.x, r4.y, r0.z  // ::fmax<0>
                                    add r4.x, -r3.w, r5.x  // ::delta<0>
                                    add r3.w, r3.w, r5.x  // ::maxplusmin<0>

#line 39
                                    add r4.y, r3.w, -c3.z
                                    rcp r4.z, r3.w
                                    mul r4.z, r4.z, r4.x  // ::hsl<1>
                                    add r3.w, -r3.w, c4.x
                                    rcp r3.w, r3.w
                                    mul r3.w, r3.w, r4.x  // ::hsl<1>
                                    cmp r6.x, r4.y, r3.w, r4.z  // ::hsl<1>

#line 46
                                    add r4.yz, r0.xxyw, -r5.x
                                    rcp r3.w, r4.x

#line 49
                                    mul r3.y, r3.w, r3.y  // ::hsl<0>
                                    mad r3.xz, r3, r3.w, c4  // ::hsl<0,0>
                                    cmp r3.x, -r4_abs.z, r3.x, r3.z  // ::hsl<0>
                                    cmp r3.x, -r4_abs.y, r3.y, r3.x  // ::hsl<0>
                                    mul r3.y, r3.x, c4.w  // ::hsl<0>

#line 54
                                    mad r3.z, r3.x, c6.x, c6.y  // ::hsl<0>
                                    cmp r6.yzw, r3.x, r3.y, r3.z  // ::hsl<0,0,0>
                                    cmp r3, -r4_abs.x, c3.y, r6  // ::hsl<1,0,0,0>

#line 20
                                    add r4.x, -r2.z, r2.y
                                    cmp r2.yz, r4.x, r2.xzyw, r2
                                    min r4.x, r2.w, r2.y  // ::fmin<0>
                                    max r4.y, r2.z, r2.w  // ::fmax<0>
                                    add r2.y, r4.x, r4.y  // ::maxplusmin<0>

#line 26
                                    mul r4.xyz, r2.y, c3.w  // ::hsl<2,2,2>

#line 85
                                    if_eq r3.x, c3.y

#line 88
                                    else

#line 92
                                      add r2.z, r2.y, -c3.z

#line 65
                                      add r5, r3, c5  // HueToRGB::temp3<0,0,0>

#line 93
                                      mul r2.w, r4.z, r5.x  // ::temp2<0>
                                      mad r3.y, r2.y, c3.w, r3.x
                                      mad r3.x, r3.x, -r4.z, r3.y  // ::temp2<0>
                                      cmp r2.z, r2.z, r3.x, r2.w  // ::temp2<0>
                                      add r2.y, -r2.z, r2.y  // ::temp1<0>

#line 64
                                      add r2.w, -r5.y, c3.z
                                      cmp r2.w, r2.w, r5.y, r5.w  // HueToRGB::temp3<0>
                                      cmp r2.w, r5.y, r2.w, r5.z  // HueToRGB::temp3<0>

#line 70
                                      add r3.x, -r2.y, r2.z
                                      mul r3.y, r3.x, c6.z
                                      mad r3.z, r3.y, r2.w, r2.y  // ::rgbComponent<0>

#line 73
                                      add r5.xyz, r2.w, c9
                                      add r2.w, -r2.w, c6.w
                                      mul r2.w, r2.w, r3.x
                                      mad r2.w, r2.w, c6.z, r2.y  // ::rgbComponent<0>
                                      cmp r2.w, r5.z, r2.y, r2.w  // ::rgbComponent<0>
                                      cmp r2.w, r5.y, r2.w, r2.z  // ::rgbComponent<0>
                                      cmp r4.x, r5.x, r2.w, r3.z  // ::rgbComponent<0>

#line 64
                                      add r2.w, -r3.w, c3.z
                                      add r5, r3.w, c7  // HueToRGB::temp3<0,0,0,0>
                                      cmp r2.w, r2.w, r3.w, r5.y  // HueToRGB::temp3<0>
                                      cmp r2.w, r3.w, r2.w, r5.x  // HueToRGB::temp3<0>

#line 70
                                      mad r3.z, r3.y, r2.w, r2.y  // ::rgbComponent<0>

#line 73
                                      add r6.xyz, r2.w, c9
                                      add r2.w, -r2.w, c6.w
                                      mul r2.w, r2.w, r3.x
                                      mad r2.w, r2.w, c6.z, r2.y  // ::rgbComponent<0>
                                      cmp r2.w, r6.z, r2.y, r2.w  // ::rgbComponent<0>
                                      cmp r2.w, r6.y, r2.w, r2.z  // ::rgbComponent<0>
                                      cmp r4.y, r6.x, r2.w, r3.z  // ::rgbComponent<0>

#line 64
                                      add r2.w, -r5.z, c3.z
                                      add r3.z, r3.w, -c5.z  // HueToRGB::temp3<0>
                                      cmp r2.w, r2.w, r5.z, r3.z  // HueToRGB::temp3<0>
                                      cmp r2.w, r5.z, r2.w, r5.w  // HueToRGB::temp3<0>

#line 70
                                      mad r3.y, r3.y, r2.w, r2.y  // ::rgbComponent<0>

#line 73
                                      add r5.xyz, r2.w, c9
                                      add r2.w, -r2.w, c6.w
                                      mul r2.w, r2.w, r3.x
                                      mad r2.w, r2.w, c6.z, r2.y  // ::rgbComponent<0>
                                      cmp r2.y, r5.z, r2.y, r2.w  // ::rgbComponent<0>
                                      cmp r2.y, r5.y, r2.y, r2.z  // ::rgbComponent<0>
                                      cmp r4.z, r5.x, r2.y, r3.y  // ::rgbComponent<0>

#line 102
                                    endif

#line 405
                                    lrp r2.yzw, r1.x, r4.xxyz, r0.xxyz  // ::result<0,1,2>
                                    mov r0.xyz, r2.yzww  // ::result<0,1,2>
                                  else
                                    if_eq r2.x, c13.y

#line 411
                                      rcp r2.y, r1.x
                                      mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 415
                                      mul r2.yzw, r0.xxyz, r2  // ::result<0,1,2>

#line 418
                                      lrp r3.xyz, r1.x, r2.yzww, r0  // ::result<0,1,2>
                                      mov r0.xyz, r3  // ::result<0,1,2>
                                    else
                                      if_eq r2.x, c13.z

#line 424
                                        rcp r2.y, r1.x
                                        mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 427
                                        add r3.xyz, -r0, c3.z
                                        add r2.yzw, -r2, r3.xxyz
                                        add r2.yzw, -r2_abs, c3.z  // ::result<0,1,2>

#line 430
                                        lrp r3.xyz, r1.x, r2.yzww, r0  // ::result<0,1,2>
                                        mov r0.xyz, r3  // ::result<0,1,2>
                                      else

#line 438
                                        if_eq r2.x, c13.w

#line 441
                                          rcp r2.y, r1.x
                                          mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 459
                                          add r3.xyz, -r0, c3.w
                                          add r4.xyz, r0, -c3.w
                                          mad r4.xyz, r4, -c10.z, c10.w
                                          add r5.xyz, -r2.yzww, c3.z
                                          mad r4.xyz, r4, -r5, c3.z  // ::result<0,1,2>

#line 451
                                          dp2add r2.y, r2.y, r0.x, c3.y  // ::result<0>
                                          cmp r5.x, r3.x, r2.y, r4.x  // ::result<0>

#line 457
                                          dp2add r2.y, r2.z, r0.y, c3.y  // ::result<1>
                                          cmp r5.y, r3.y, r2.y, r4.y  // ::result<1>

#line 463
                                          dp2add r2.y, r2.w, r0.z, c3.y  // ::result<2>
                                          cmp r5.z, r3.z, r2.y, r4.z  // ::result<2>

#line 466
                                          lrp r2.yzw, r1.x, r5.xxyz, r0.xxyz  // ::result<0,1,2>
                                          mov r0.xyz, r2.yzww  // ::result<0,1,2>
                                        else
                                          if_eq r2.x, c14.x

#line 472
                                            rcp r2.y, r1.x
                                            mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 475
                                            min r3.xyz, r2.yzww, r0
                                            max r4.xyz, r0, r2.yzww
                                            add r2.yzw, r3.xxyz, -r4.xxyz
                                            add r2.yzw, r2, c3.z  // ::result<0,1,2>

#line 478
                                            lrp r3.xyz, r1.x, r2.yzww, r0  // ::result<0,1,2>
                                            mov r0.xyz, r3  // ::result<0,1,2>
                                          else
                                            if_eq r2.x, c14.y

#line 484
                                              rcp r2.y, r1.x
                                              mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 501
                                              add r3.xyz, -r2.yzww, c3.w
                                              add r4.xyz, r2.yzww, -c3.w
                                              add r4.xyz, r4, r4
                                              max r5.xyz, r0, r4  // ::result<0,1,2>
                                              add r2.yzw, r2, r2
                                              min r4.xyz, r2.yzww, r0  // ::result<0,1,2>
                                              cmp r2.yzw, r3.xxyz, r4.xxyz, r5.xxyz  // ::result<0,1,2>

#line 508
                                              lrp r3.xyz, r1.x, r2.yzww, r0  // ::result<0,1,2>
                                              mov r0.xyz, r3  // ::result<0,1,2>
                                            else
                                              if_eq r2.x, c14.z

#line 514
                                                rcp r2.y, r1.x
                                                mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 519
                                                add r3.xyz, r2.yzww, -c3.z
                                                mul r4.xyz, r0, r0
                                                add r5.xyz, -r2.yzww, c3.z
                                                rcp r3.w, r5.x
                                                mul r3.w, r3.w, r4.x
                                                min r4.x, r3.w, c3.z
                                                cmp r6.x, r3.x, r2.y, r4.x  // ::result<0>
                                                rcp r2.y, r5.y
                                                mul r2.y, r2.y, r4.y
                                                min r3.x, r2.y, c3.z
                                                cmp r6.y, r3.y, r2.z, r3.x  // ::result<1>
                                                rcp r2.y, r5.z
                                                mul r2.y, r2.y, r4.z
                                                min r3.x, r2.y, c3.z
                                                cmp r6.z, r3.z, r2.w, r3.x  // ::result<2>

#line 522
                                                lrp r2.yzw, r1.x, r6.xxyz, r0.xxyz  // ::result<0,1,2>
                                                mov r0.xyz, r2.yzww  // ::result<0,1,2>
                                              else
                                                if_eq r2.x, c14.w

#line 528
                                                  rcp r2.y, r1.x
                                                  mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 20
                                                  add r3.x, -r0.y, r0.x
                                                  cmp r3.yz, r3.x, r0.xyxw, r0.xxyw
                                                  min r4.x, r0.z, r3.y  // ::fmin<0>
                                                  max r4.y, r3.z, r0.z  // ::fmax<0>
                                                  add r3.y, r4.x, r4.y  // ::maxplusmin<0>

#line 26
                                                  mul r5.xyz, r3.y, c3.w  // ::hsl<2,2,2>

#line 20
                                                  add r3.z, -r2.z, r2.y
                                                  cmp r2.yz, r3.z, r2.xzyw, r2
                                                  min r3.z, r2.w, r2.y  // ::fmin<0>
                                                  max r3.w, r2.z, r2.w  // ::fmax<0>
                                                  add r2.y, -r3.z, r3.w  // ::delta<0>
                                                  add r2.z, r3.z, r3.w  // ::maxplusmin<0>

#line 39
                                                  add r2.w, r2.z, -c3.z
                                                  rcp r3.z, r2.z
                                                  mul r3.z, r2.y, r3.z  // ::hsl<1>
                                                  add r2.z, -r2.z, c4.x
                                                  rcp r2.z, r2.z
                                                  mul r2.z, r2.z, r2.y  // ::hsl<1>
                                                  cmp r2.z, r2.w, r2.z, r3.z  // ::hsl<1>

#line 55
                                                  cmp r2.y, -r2_abs.y, c3.y, r2.z  // ::hsl<1>

#line 85
                                                  if_eq r2.y, c3.y

#line 88
                                                  else

#line 22
                                                    add r2.z, -r4.x, r4.y  // ::delta<0>

#line 46
                                                    add r3.zw, r0.xyxy, -r4.y
                                                    add r2.w, -r0.z, r0.y
                                                    rcp r4.x, r2.z
                                                    mul r2.w, r2.w, r4.x  // ::hsl<0>
                                                    add r4.y, -r0.x, r0.z
                                                    mad r4.y, r4.y, r4.x, c4.x  // ::hsl<0>
                                                    mad r3.x, r3.x, r4.x, c4.z  // ::hsl<0>
                                                    cmp r3.x, -r3_abs.w, r4.y, r3.x  // ::hsl<0>
                                                    cmp r2.w, -r3_abs.z, r2.w, r3.x  // ::hsl<0>
                                                    mul r3.x, r2.w, c4.w  // ::hsl<0>

#line 54
                                                    mad r3.z, r2.w, c6.x, c6.y  // ::hsl<0>
                                                    cmp r2.w, r2.w, r3.x, r3.z  // ::hsl<0>
                                                    cmp r2.z, -r2_abs.z, c3.y, r2.w  // ::hsl<0>

#line 92
                                                    add r2.w, r3.y, -c3.z
                                                    add r3.x, r2.y, c3.z
                                                    mul r3.x, r3.x, r5.z  // ::temp2<0>
                                                    mad r3.z, r3.y, c3.w, r2.y
                                                    mad r2.y, r2.y, -r5.z, r3.z  // ::temp2<0>
                                                    cmp r2.y, r2.w, r2.y, r3.x  // ::temp2<0>
                                                    add r2.w, -r2.y, r3.y  // ::temp1<0>

#line 63
                                                    add r3, r2.z, c5.yzwx  // HueToRGB::temp3<0,0,0,0>
                                                    add r4.x, -r3.x, c3.z
                                                    cmp r3.z, r4.x, r3.x, r3.z  // HueToRGB::temp3<0>
                                                    cmp r3.x, r3.x, r3.z, r3.y  // HueToRGB::temp3<0>

#line 70
                                                    add r3.y, -r2.w, r2.y
                                                    mul r3.z, r3.y, c6.z
                                                    mad r4.x, r3.z, r3.x, r2.w  // ::rgbComponent<0>

#line 73
                                                    add r4.yzw, r3.x, c9.xxyz
                                                    add r3.x, -r3.x, c6.w
                                                    mul r3.x, r3.x, r3.y
                                                    mad r3.x, r3.x, c6.z, r2.w  // ::rgbComponent<0>
                                                    cmp r3.x, r4.w, r2.w, r3.x  // ::rgbComponent<0>
                                                    cmp r3.x, r4.z, r3.x, r2.y  // ::rgbComponent<0>
                                                    cmp r5.x, r4.y, r3.x, r4.x  // ::rgbComponent<0>

#line 64
                                                    add r3.x, -r2.z, c3.z
                                                    add r4, r2.z, -c5.xywz  // HueToRGB::temp3<0,0,0,0>
                                                    cmp r3.x, r3.x, r2.z, r4.x  // HueToRGB::temp3<0>
                                                    cmp r2.z, r2.z, r3.x, r3.w  // HueToRGB::temp3<0>

#line 70
                                                    mad r3.x, r3.z, r2.z, r2.w  // ::rgbComponent<0>

#line 73
                                                    add r6.xyz, r2.z, c9
                                                    add r2.z, -r2.z, c6.w
                                                    mul r2.z, r2.z, r3.y
                                                    mad r2.z, r2.z, c6.z, r2.w  // ::rgbComponent<0>
                                                    cmp r2.z, r6.z, r2.w, r2.z  // ::rgbComponent<0>
                                                    cmp r2.z, r6.y, r2.z, r2.y  // ::rgbComponent<0>
                                                    cmp r5.y, r6.x, r2.z, r3.x  // ::rgbComponent<0>

#line 64
                                                    add r2.z, -r4.y, c3.z
                                                    cmp r2.z, r2.z, r4.y, r4.w  // HueToRGB::temp3<0>
                                                    cmp r2.z, r4.y, r2.z, r4.z  // HueToRGB::temp3<0>

#line 70
                                                    mad r3.x, r3.z, r2.z, r2.w  // ::rgbComponent<0>

#line 73
                                                    add r4.xyz, r2.z, c9
                                                    add r2.z, -r2.z, c6.w
                                                    mul r2.z, r2.z, r3.y
                                                    mad r2.z, r2.z, c6.z, r2.w  // ::rgbComponent<0>
                                                    cmp r2.z, r4.z, r2.w, r2.z  // ::rgbComponent<0>
                                                    cmp r2.y, r4.y, r2.z, r2.y  // ::rgbComponent<0>
                                                    cmp r5.z, r4.x, r2.y, r3.x  // ::rgbComponent<0>

#line 102
                                                  endif

#line 534
                                                  lrp r2.yzw, r1.x, r5.xxyz, r0.xxyz  // ::result<0,1,2>
                                                  mov r0.xyz, r2.yzww  // ::result<0,1,2>
                                                else
                                                  if_eq r2.x, c8.x

#line 540
                                                    rcp r2.y, r1.x
                                                    mul_sat r2.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 544
                                                    add r3.xyz, -r0, c3.z
                                                    add r2.yzw, -r2, c3.z
                                                    mad r2.yzw, r3.xxyz, -r2, c3.z  // ::result<0,1,2>

#line 547
                                                    lrp r3.xyz, r1.x, r2.yzww, r0  // ::result<0,1,2>
                                                    mov r0.xyz, r3  // ::result<0,1,2>
                                                  else
                                                    add r2.x, r2.x, c8.y

#line 553
                                                    rcp r2.y, r1.x
                                                    mul_sat r1.yzw, r1, r2.y  // Blend::blendColor<0,1,2>

#line 558
                                                    add r2.yzw, r1, -c3.w
                                                    add r3.xyz, r0, r0
                                                    mul r4.xyz, r0, r0
                                                    add r5.xyz, r1.yzww, r1.yzww
                                                    mad r6.xyz, r1.yzww, -c10.z, c10.w
                                                    mul r4.xyz, r4, r6
                                                    mad r4.xyz, r3, r1.yzww, r4
                                                    rsq r3.w, r0.x
                                                    rcp r3.w, r3.w
                                                    mad r6.xyz, r1.yzww, c11.y, c11.z
                                                    add r1.yzw, -r1, c3.z
                                                    mul r1.yzw, r1, r3.xxyz
                                                    mad r1.y, r3.w, r6.x, r1.y
                                                    cmp r3.x, r2.y, r1.y, r4.x  // ::result<0>
                                                    rsq r1.y, r0.y
                                                    rcp r1.y, r1.y
                                                    mad r1.y, r1.y, r6.y, r1.z
                                                    cmp r3.y, r2.z, r1.y, r4.y  // ::result<1>
                                                    rsq r1.y, r0.z
                                                    rcp r1.y, r1.y
                                                    mad r1.y, r1.y, r6.z, r1.w
                                                    cmp r3.z, r2.w, r1.y, r4.z  // ::result<2>

#line 561
                                                    lrp r4.xyz, r1.x, r3, r0  // ::result<0,1,2>

#line 572
                                                    add r1.yzw, -r0.xxyz, c3.z
                                                    rcp r3.x, r5.x
                                                    mad r1.y, r1.y, -r3.x, c3.z
                                                    max r3.x, r1.y, c3.y
                                                    cmp r1.y, -r5.x, r5.x, r3.x
                                                    add r3.xyz, r2.yzww, r2.yzww
                                                    mad r6.xyz, r2.yzww, c11.y, c11.z
                                                    mad r7.xyz, r2.yzww, -c10.z, c10.w
                                                    rcp r3.w, r7.x
                                                    mul r3.w, r0.x, r3.w
                                                    min r4.w, r3.w, c3.z
                                                    cmp r3.x, r6.x, r3.x, r4.w
                                                    cmp r8.x, r2.y, r3.x, r1.y  // ::result<0>
                                                    rcp r1.y, r5.y
                                                    mad r1.y, r1.z, -r1.y, c3.z
                                                    max r2.y, r1.y, c3.y
                                                    cmp r1.y, -r5.y, r5.y, r2.y
                                                    rcp r1.z, r7.y
                                                    mul r1.z, r0.y, r1.z
                                                    min r2.y, r1.z, c3.z
                                                    cmp r1.z, r6.y, r3.y, r2.y
                                                    cmp r8.y, r2.z, r1.z, r1.y  // ::result<1>
                                                    rcp r1.y, r5.z
                                                    mad r1.y, r1.w, -r1.y, c3.z
                                                    max r2.y, r1.y, c3.y
                                                    cmp r1.y, -r5.z, r5.z, r2.y
                                                    rcp r1.z, r7.z
                                                    mul r1.z, r0.z, r1.z
                                                    min r2.y, r1.z, c3.z
                                                    cmp r1.z, r6.z, r3.z, r2.y
                                                    cmp r8.z, r2.w, r1.z, r1.y  // ::result<2>

#line 575
                                                    lrp r2.yzw, r1.x, r8.xxyz, r0.xxyz  // ::result<0,1,2>
                                                    cmp r0.xyz, -r2_abs.x, r4, r2.yzww  // ::result<0,1,2>
                                                  endif
                                                endif
                                              endif
                                            endif
                                          endif
                                        endif
                                      endif
                                    endif
                                  endif
                                endif
                              endif
                            endif
                          endif
                        endif
                      endif
                    endif
                  endif
                endif
              endif
            endif
          endif
        endif
      endif
    endif
    mov oC0, r0  // ::main<0,1,2,3>

// approximately 753 instruction slots used (1 texture, 752 arithmetic)
