<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ADay" xml:space="preserve">
    <value>一日</value>
  </data>
  <data name="Ago" xml:space="preserve">
    <value>前に</value>
  </data>
  <data name="AMinute" xml:space="preserve">
    <value>一分</value>
  </data>
  <data name="AMonth" xml:space="preserve">
    <value>月</value>
  </data>
  <data name="AnHour" xml:space="preserve">
    <value>1時間</value>
  </data>
  <data name="Ascending" xml:space="preserve">
    <value>上昇</value>
  </data>
  <data name="ASecond" xml:space="preserve">
    <value>二番目の</value>
  </data>
  <data name="AYear" xml:space="preserve">
    <value>1年</value>
  </data>
  <data name="Back" xml:space="preserve">
    <value>戻る</value>
  </data>
  <data name="Background" xml:space="preserve">
    <value>バックグラウンド</value>
  </data>
  <data name="Bind" xml:space="preserve">
    <value>練る</value>
  </data>
  <data name="Bottom" xml:space="preserve">
    <value>下</value>
  </data>
  <data name="BottomLeft" xml:space="preserve">
    <value>左下の</value>
  </data>
  <data name="BottomRight" xml:space="preserve">
    <value>右下</value>
  </data>
  <data name="Center" xml:space="preserve">
    <value>中心</value>
  </data>
  <data name="Clear" xml:space="preserve">
    <value>クリア</value>
  </data>
  <data name="CollapseGroups" xml:space="preserve">
    <value>グループを折りたたむ</value>
  </data>
  <data name="Collection" xml:space="preserve">
    <value>コレクション</value>
  </data>
  <data name="Current" xml:space="preserve">
    <value>現在</value>
  </data>
  <data name="Days" xml:space="preserve">
    <value>日々</value>
  </data>
  <data name="Decrease" xml:space="preserve">
    <value>下降</value>
  </data>
  <data name="Descending" xml:space="preserve">
    <value>降順</value>
  </data>
  <data name="Disconnect" xml:space="preserve">
    <value>切断する</value>
  </data>
  <data name="Enter" xml:space="preserve">
    <value>入力</value>
  </data>
  <data name="Font" xml:space="preserve">
    <value>フォント</value>
  </data>
  <data name="FontSize" xml:space="preserve">
    <value>フォントサイズ</value>
  </data>
  <data name="Foreground" xml:space="preserve">
    <value>前景</value>
  </data>
  <data name="FromNow" xml:space="preserve">
    <value>今から</value>
  </data>
  <data name="HideCategories" xml:space="preserve">
    <value>カテゴリを非表示</value>
  </data>
  <data name="HidePassword" xml:space="preserve">
    <value>パスワードを隠す</value>
  </data>
  <data name="Hours" xml:space="preserve">
    <value>時間</value>
  </data>
  <data name="Increase" xml:space="preserve">
    <value>増加</value>
  </data>
  <data name="Key" xml:space="preserve">
    <value>鍵</value>
  </data>
  <data name="Left" xml:space="preserve">
    <value>左</value>
  </data>
  <data name="Minutes" xml:space="preserve">
    <value>分</value>
  </data>
  <data name="Months" xml:space="preserve">
    <value>月</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>名前</value>
  </data>
  <data name="Never" xml:space="preserve">
    <value>一度もない</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>新しい</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>番号</value>
  </data>
  <data name="Now" xml:space="preserve">
    <value>今</value>
  </data>
  <data name="Options" xml:space="preserve">
    <value>オプション</value>
  </data>
  <data name="Password" xml:space="preserve">
    <value>パスワード</value>
  </data>
  <data name="Repeat" xml:space="preserve">
    <value>繰り返す</value>
  </data>
  <data name="Reset" xml:space="preserve">
    <value>リセット</value>
  </data>
  <data name="Right" xml:space="preserve">
    <value>右</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>検索</value>
  </data>
  <data name="Seconds" xml:space="preserve">
    <value>秒</value>
  </data>
  <data name="ShowCategories" xml:space="preserve">
    <value>カテゴリを表示</value>
  </data>
  <data name="ShowPassword" xml:space="preserve">
    <value>パスワードを表示</value>
  </data>
  <data name="Sort" xml:space="preserve">
    <value>選別</value>
  </data>
  <data name="SortDirection" xml:space="preserve">
    <value>ソート方向</value>
  </data>
  <data name="Swap" xml:space="preserve">
    <value>スワップ</value>
  </data>
  <data name="Tomorrow" xml:space="preserve">
    <value>明日</value>
  </data>
  <data name="Top" xml:space="preserve">
    <value>上</value>
  </data>
  <data name="TopLeft" xml:space="preserve">
    <value>左上</value>
  </data>
  <data name="TopRight" xml:space="preserve">
    <value>右上</value>
  </data>
  <data name="Type" xml:space="preserve">
    <value>タイプ</value>
  </data>
  <data name="Unbind" xml:space="preserve">
    <value>解放する</value>
  </data>
  <data name="Username" xml:space="preserve">
    <value>ユーザー名</value>
  </data>
  <data name="Value" xml:space="preserve">
    <value>価値</value>
  </data>
  <data name="Years" xml:space="preserve">
    <value>年</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>はい</value>
  </data>
  <data name="Yesterday" xml:space="preserve">
    <value>昨日</value>
  </data>
  <data name="Command" xml:space="preserve">
    <value>指示</value>
  </data>
  <data name="Help" xml:space="preserve">
    <value>ヘルプ</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>選ぶ</value>
  </data>
  <data name="CloseAll" xml:space="preserve">
    <value>すべて閉じる</value>
  </data>
  <data name="Float" xml:space="preserve">
    <value>浮く</value>
  </data>
  <data name="CloseAllButThis" xml:space="preserve">
    <value>これ以外はすべて閉じる</value>
  </data>
  <data name="FloatAll" xml:space="preserve">
    <value>すべてフロート</value>
  </data>
  <data name="Next" xml:space="preserve">
    <value>次</value>
  </data>
  <data name="Previous" xml:space="preserve">
    <value>前</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>コピー</value>
  </data>
  <data name="Cut" xml:space="preserve">
    <value>切る</value>
  </data>
  <data name="Paste" xml:space="preserve">
    <value>ペースト</value>
  </data>
  <data name="Abort" xml:space="preserve">
    <value>アボート</value>
  </data>
  <data name="All" xml:space="preserve">
    <value>全て</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>キャンセル</value>
  </data>
  <data name="Continue" xml:space="preserve">
    <value>継続する</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>終わり</value>
  </data>
  <data name="Error" xml:space="preserve">
    <value>エラー</value>
  </data>
  <data name="Ignore" xml:space="preserve">
    <value>無視</value>
  </data>
  <data name="Message" xml:space="preserve">
    <value>メッセージ</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>なし</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>わかった</value>
  </data>
  <data name="Retry" xml:space="preserve">
    <value>リトライ</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>成功</value>
  </data>
  <data name="Warning" xml:space="preserve">
    <value>警告</value>
  </data>
  <data name="About" xml:space="preserve">
    <value>だいたい</value>
  </data>
  <data name="Hide" xml:space="preserve">
    <value>隠れる</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>言語</value>
  </data>
  <data name="Theme" xml:space="preserve">
    <value>テーマ</value>
  </data>
  <data name="AutoSave" xml:space="preserve">
    <value>自動保存</value>
  </data>
  <data name="Layout" xml:space="preserve">
    <value>レイアウト</value>
  </data>
  <data name="OpenFolder" xml:space="preserve">
    <value>開いたフォルダ</value>
  </data>
  <data name="ResetLayout" xml:space="preserve">
    <value>レイアウトをリセット</value>
  </data>
  <data name="SaveLayout" xml:space="preserve">
    <value>レイアウトを保存</value>
  </data>
  <data name="Accessed" xml:space="preserve">
    <value>アクセス済み</value>
  </data>
  <data name="Created" xml:space="preserve">
    <value>作成した</value>
  </data>
  <data name="Hidden" xml:space="preserve">
    <value>隠れた</value>
  </data>
  <data name="Modified" xml:space="preserve">
    <value>変更</value>
  </data>
  <data name="ReadOnly" xml:space="preserve">
    <value>読み取り専用</value>
  </data>
  <data name="Size" xml:space="preserve">
    <value>サイズ</value>
  </data>
  <data name="Path" xml:space="preserve">
    <value>道</value>
  </data>
  <data name="Alpha" xml:space="preserve">
    <value>アルファ</value>
  </data>
  <data name="Colors" xml:space="preserve">
    <value>色</value>
  </data>
  <data name="Component" xml:space="preserve">
    <value>成分</value>
  </data>
  <data name="Properties" xml:space="preserve">
    <value>プロパティ</value>
  </data>
  <data name="Panels" xml:space="preserve">
    <value>パネル</value>
  </data>
</root>