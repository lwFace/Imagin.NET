<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
    xmlns:local="clr-namespace:Imagin.Common.Controls"
    xmlns:Data="clr-namespace:Imagin.Common.Data"
    xmlns:Linq="clr-namespace:Imagin.Common.Linq"
    xmlns:Markup="clr-namespace:Imagin.Common.Markup">
    <Style x:Key="{x:Type local:WindowButton}" TargetType="{x:Type local:WindowButton}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="25"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Width" Value="30"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <local:MaskedImage
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            Source="{Binding Content, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, UpdateSourceTrigger=PropertyChanged}"
                            SourceColor="{TemplateBinding Foreground}"
                            SourceHeight="{Binding ContentSize.Height, RelativeSource={RelativeSource TemplatedParent}}"
                            SourceWidth="{Binding ContentSize.Width, RelativeSource={RelativeSource TemplatedParent}}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Window.Button.Checked.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Button.Checked.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Window.Button.Checked.Foreground}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="False"/>
                    <Condition Property="IsMouseOver" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Brush.Window.Button.MouseOver.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Button.MouseOver.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Window.Button.MouseOver.Foreground}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="False"/>
                    <Condition Property="IsMouseOver" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Brush.Window.Button.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Button.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Window.Button.Foreground}"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsChecked" Value="False"/>
                    <Condition Property="IsPressed" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource Brush.Window.Button.Pressed.Background}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Button.Pressed.Border}"/>
                <Setter Property="Foreground" Value="{DynamicResource Brush.Window.Button.Pressed.Foreground}"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type local:BaseWindow}" TargetType="{x:Type local:BaseWindow}">
        <Setter Property="AllowsTransparency" Value="False"/>
        <Setter Property="Background" Value="{DynamicResource Brush.Window.Background}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource Brush.Text}"/>
        <Setter Property="Linq:WindowExtensions.Extends" Value="True"/>
        <Setter Property="TextOptions.TextFormattingMode" Value="Display"/>
        <Setter Property="ShowInTaskbar" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:BaseWindow}">
                    <Border  
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                        <Border.Resources>
                            <Data:Reference x:Key="BaseWindow" Data="{Data:Ancestor {x:Type local:BaseWindow}}"/>
                        </Border.Resources>
                        <Grid Linq:GridExtensions.Rows="Auto,*">
                            <Grid
                                Grid.Row="0"
                                Linq:GridExtensions.Columns="Auto,*,Auto,Auto,Auto,Auto"
                                Height="32">
                                <ContentControl 
                                    Grid.Column="0"
                                    x:Name="PART_Icon"
                                    Margin="10,0,0,0"/>
                                <ContentControl
                                    Grid.Column="1"
                                    Content="{Data:AncestorReference {x:Type local:BaseWindow}}"
                                    ContentTemplate="{TemplateBinding TitleTemplate}"
                                    Margin="10,0,0,0"/>

                                <ItemsControl
                                    Grid.Column="2"
                                    ItemsSource="{TemplateBinding Buttons}"
                                    VerticalAlignment="Top"
                                    WindowChrome.IsHitTestVisibleInChrome="True">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <StackPanel Orientation="Horizontal"/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                </ItemsControl>
                                <local:WindowButton
                                    x:Name="PART_Minimize"
                                    Grid.Column="3"
                                    Command="{x:Static Linq:WindowExtensions.MinimizeCommand}"
                                    CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{Markup:Image Imagin.Common.WPF, Images/Minus.png}"
                                    ToolTip="Minimize"
                                    VerticalAlignment="Top"
                                    WindowChrome.IsHitTestVisibleInChrome="True"/>
                                <local:WindowButton
                                    x:Name="PART_Maximize"
                                    Grid.Column="4"
                                    Command="{x:Static Linq:WindowExtensions.MaximizeCommand}"
                                    CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{Markup:Image Imagin.Common.WPF, Images/Maximize.png}"
                                    ToolTip="Maximize"
                                    VerticalAlignment="Top"
                                    WindowChrome.IsHitTestVisibleInChrome="True"/>
                                <local:WindowButton
                                    x:Name="PART_Restore"
                                    Grid.Column="4"
                                    Command="{x:Static Linq:WindowExtensions.RestoreCommand}"
                                    CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{Markup:Image Imagin.Common.WPF, Images/Restore.png}"
                                    ToolTip="Restore"
                                    VerticalAlignment="Top"
                                    WindowChrome.IsHitTestVisibleInChrome="True"/>
                                <local:WindowButton
                                    x:Name="PART_Close"
                                    Grid.Column="5"
                                    Command="{x:Static Linq:WindowExtensions.CloseCommand}"
                                    CommandTarget="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                    Content="{Markup:Image Imagin.Common.WPF, Images/X.png}"
                                    ToolTip="Close"
                                    VerticalAlignment="Top"
                                    WindowChrome.IsHitTestVisibleInChrome="True"/>
                            </Grid>

                            <Path
                                Grid.Row="1"
                                x:Name="PART_ResizeGrip"
                                Data="F1 M1,10 L3,10 M5,10 L7,10 M9,10 L11,10 M2,9 L2,11 M6,9 L6,11 M10,9 L10,11 M5,6 L7,6 M9,6 L11,6 M6,5 L6,7 M10,5 L10,7 M9,2 L11,2 M10,1 L10,3"
                                Height="12"
                                HorizontalAlignment="Right"
                                Margin="0,0,4,4"
                                Stroke="{TemplateBinding Foreground}"
                                StrokeThickness="1"
                                Stretch="None"
                                VerticalAlignment="Bottom"
                                Visibility="Collapsed"
                                Width="12"/>
                            <Border
                                Grid.Row="1"
                                BorderBrush="{DynamicResource Brush.Window.Content.Border}"
                                BorderThickness="{DynamicResource Window.Content.BorderThickness}"
                                Margin="2"
                                Padding="{TemplateBinding Padding}">
                                <AdornerDecorator>
                                    <ContentPresenter
                                        Content="{TemplateBinding Content}"
                                        ContentTemplate="{TemplateBinding ContentTemplate}"
                                        ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"/>
                                </AdornerDecorator>
                            </Border>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Maximized"/>
                                <Condition Property="ResizeMode" Value="CanMinimize"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Restore" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Normal"/>
                                <Condition Property="ResizeMode" Value="CanMinimize"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Maximize" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Maximized"/>
                                <Condition Property="ResizeMode" Value="CanResize"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Restore" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Normal"/>
                                <Condition Property="ResizeMode" Value="CanResize"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Maximize" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Maximized"/>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Restore" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Normal"/>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Maximize" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>

                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="Icon" Value="{x:Null}"/>
                                <Condition Property="TitleIcon" Value="{x:Null}"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Icon" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <Trigger Property="Icon" Value="{x:Null}">
                            <Setter TargetName="PART_Icon" Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <local:MaskedImage
                                            Source="{Data:Ancestor TitleIcon, {x:Type local:BaseWindow}}"
                                            SourceHeight="16"
                                            SourceWidth="16"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="TitleIcon" Value="{x:Null}">
                            <Setter TargetName="PART_Icon" Property="ContentTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <Image
                                            Height="16"
                                            Source="{Data:Ancestor Icon, {x:Type local:BaseWindow}}"
                                            Width="16"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        
                        <Trigger Property="ResizeMode" Value="NoResize">
                            <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Maximized"/>
                                <Condition Property="WindowStyle" Value="ToolWindow"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="WindowState" Value="Normal"/>
                                <Condition Property="WindowStyle" Value="ToolWindow"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Maximize" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Restore" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="ResizeMode" Value="CanResizeWithGrip"/>
                                <Condition Property="WindowState" Value="Normal"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_ResizeGrip" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="TitleTemplate">
            <Setter.Value>
                <DataTemplate DataType="{x:Type Data:Reference}">
                    <TextBlock Text="{Binding Data.Title}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="UseLayoutRounding" Value="True"/>
        <Setter Property="WindowChrome.WindowChrome">
            <Setter.Value>
                <WindowChrome
                    CaptionHeight="32"
                    CornerRadius="0"
                    GlassFrameThickness="0,0,0,1"
                    ResizeBorderThickness="5"/>
            </Setter.Value>
        </Setter>
        <Setter Property="WindowStyle" Value="None"/>
        <Style.Triggers>
            <Trigger Property="IsActive" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Active.Border}"/>
            </Trigger>
            <Trigger Property="IsActive" Value="False">
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Window.Border}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type local:CollectionWindow}" TargetType="{x:Type local:CollectionWindow}" BasedOn="{StaticResource {x:Type local:BaseWindow}}">
        <Setter Property="ItemTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Name}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>