<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Imagin.Common.Controls"
    xmlns:Linq="clr-namespace:Imagin.Common.Linq"
    xmlns:Markup="clr-namespace:Imagin.Common.Markup">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="{Markup:Uri Imagin.Common.WPF, Styles/FrameworkElement.xaml}"/>
    </ResourceDictionary.MergedDictionaries>
    
    <ControlTemplate x:Key="Template.Button" TargetType="{x:Type Button}">
        <Border 
            Background="{TemplateBinding Background}" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}"
            CornerRadius="{Binding (Linq:FrameworkElementExtensions.CornerRadius), RelativeSource={RelativeSource Mode=TemplatedParent}}"
            Padding="{TemplateBinding Padding}">
            <ContentPresenter 
                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
        </Border>
    </ControlTemplate>

    <Style x:Key="ButtonBase" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="{DynamicResource Brush.Button.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Button.Border}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Foreground" Value="{DynamicResource Brush.Button.Foreground}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="36,8" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Button.MouseOver.Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Button.MouseOver.Border}" />
                <Setter Property="Foreground" Value="{DynamicResource Brush.Button.MouseOver.Foreground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Button.MouseDown.Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Button.MouseDown.Border}" />
                <Setter Property="Foreground" Value="{DynamicResource Brush.Button.MouseDown.Foreground}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.4" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template" Value="{StaticResource Template.Button}" />
    </Style>

    <!-- ................................................................... -->

    <Style x:Key="Button.Green" TargetType="Button" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource Brush.Green}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Green}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template" Value="{StaticResource Template.Button}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Green.Medium}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Green.Medium}" />
                <Setter Property="Foreground" Value="{DynamicResource Brush.Button.MouseOver.Foreground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Green.Dark}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Green.Dark}" />
                <Setter Property="Foreground" Value="{DynamicResource Brush.Button.MouseDown.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="Button.Red" TargetType="Button" BasedOn="{StaticResource ButtonBase}">
        <Setter Property="Background" Value="{DynamicResource Brush.Red}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Red}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template" Value="{StaticResource Template.Button}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Red.Medium}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Red.Medium}" />
                <Setter Property="Foreground" Value="{DynamicResource Brush.Button.MouseOver.Foreground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Red.Dark}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Red.Dark}" />
                <Setter Property="Foreground" Value="{DynamicResource Brush.Button.MouseDown.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ................................................................... -->

    <Style x:Key="Style.Button.Alternate" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource Brush.Button.Alternate.Background}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Brush.Button.Alternate.Border}" />
        <Setter Property="Foreground" Value="{DynamicResource Brush.Button.Alternate.Foreground}" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template" Value="{StaticResource Template.Button}" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Button.Alternate.MouseOver.Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Button.Alternate.MouseOver.Border}" />
                <Setter Property="Foreground" Value="{DynamicResource Brush.Button.Alternate.MouseOver.Foreground}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource Brush.Button.Alternate.MouseDown.Background}" />
                <Setter Property="BorderBrush" Value="{DynamicResource Brush.Button.Alternate.MouseDown.Border}" />
                <Setter Property="Foreground" Value="{DynamicResource Brush.Button.Alternate.MouseDown.Foreground}" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- ................................................................... -->
    
    <Style x:Key="{x:Type local:TokenButton}" TargetType="{x:Type local:TokenButton}" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock Text="{Binding Mode=OneWay}"/>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Margin" Value="0,0,5,5"/>
        <Setter Property="Padding" Value="6,4"/>
    </Style>
</ResourceDictionary>