<UserControl 
    x:Class="Imagin.Common.Controls.Explorer"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:Converters="clr-namespace:Imagin.Common.Converters"
    xmlns:Data="clr-namespace:Imagin.Common.Data"
    xmlns:Linq="clr-namespace:Imagin.Common.Linq"
    xmlns:local="clr-namespace:Imagin.Common.Controls"
    mc:Ignorable="d" 
    d:DesignHeight="300" 
    d:DesignWidth="300">
    <UserControl.Resources>
        <Converters:FileSizeConverter x:Key="FileSizeConverter"/>
        <Converters:Int32ToVisibilityConverter x:Key="Int32ToVisibilityConverter"/>
        <Converters:ObjectToTypeConverter x:Key="ObjectToTypeConverter"/>
        <Converters:ValueEqualsParameterConverter x:Key="ValueEqualsParameterConverter"/>
        <Converters:ValueEqualsParameterMultiConverter x:Key="ValueEqualsParameterMultiConverter"/>

        <Data:Reference x:Key="Browser" Data="{Binding ElementName=PART_Browser}"/>
        <Data:Reference x:Key="Explorer" Data="{Binding RelativeSource={RelativeSource AncestorType={x:Type local:Explorer}}}"/>
    </UserControl.Resources>
    <Grid
        DataContext="{Binding Data, Source={StaticResource Explorer}}"
        Linq:GridExtensions.Rows="Auto,*">
        <local:AddressBar
            Grid.Row="0"
            History="{Binding History, Mode=TwoWay}"
            Padding="5"
            Path="{Binding Path}"
            Progress="{Binding Items.Progress, ElementName=PART_Browser}"
            Refreshed="OnRefreshed"/>
        <!--
        <Common:MaskedToggleButton
            Grid.Column="1"
            Source="pack://application:,,,/Imagin.Common.WPF;component/Images/Category.png"
            ToolTip="Group">
            <Common:MaskedToggleButton.DropDown>
                <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type Storage:ItemProperty}">
                                    <Setter Property="Linq:MenuItemExtensions.SelectionMode" Value="Single"/>
                                    <Setter Property="Header" Value="{Binding Mode=OneWay}"/>
                                    <Setter Property="HeaderTemplate">
                                        <Setter.Value>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Mode=OneWay}"/>
                                            </DataTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="IsCheckable" Value="True"/>
                                    <Setter Property="StaysOpenOnClick" Value="True"/>
                                    <Setter Property="IsChecked">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ValueEqualsParameterMultiConverter}" Mode="OneWay">
                                                <Binding Path="Data.GroupName" Source="{StaticResource Browser}"/>
                                                <Binding Path="."/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Command" Value="{Binding Data.GroupCommand, Source={StaticResource Browser}}"/>
                                    <Setter Property="CommandParameter" Value="{Binding .}"/>
                                    <Setter Property="Linq:MenuItemExtensions.GroupName" Value="GroupName"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                    <ContextMenu.ItemsSource>
                        <CompositeCollection>
                            <CollectionContainer Collection="{Markup:Enumerate Storage:ItemProperty}"/>
                        </CompositeCollection>
                    </ContextMenu.ItemsSource>
                </ContextMenu>
            </Common:MaskedToggleButton.DropDown>
        </Common:MaskedToggleButton>
        <Common:MaskedToggleButton
            Grid.Column="2"
            Source="pack://application:,,,/Imagin.Common.WPF;component/Images/Sort.png"
            ToolTip="Sort">
            <Common:MaskedToggleButton.DropDown>
                <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                    <ContextMenu.ItemContainerStyle>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="Linq:MenuItemExtensions.SelectionMode" Value="Single"/>
                            <Setter Property="Header" Value="{Binding Mode=OneWay}"/>
                            <Setter Property="HeaderTemplate">
                                <Setter.Value>
                                    <DataTemplate>
                                        <TextBlock 
                                                Text="{Binding Mode=OneWay}"/>
                                    </DataTemplate>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="IsCheckable" Value="True"/>
                            <Setter Property="StaysOpenOnClick" Value="True"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type Storage:ItemProperty}">
                                    <Setter Property="Command" Value="{Binding Data.SortNameCommand, Source={StaticResource Browser}}"/>
                                    <Setter Property="CommandParameter" Value="{Binding .}"/>
                                    <Setter Property="Linq:MenuItemExtensions.GroupName" Value="SortName"/>
                                    <Setter Property="IsChecked">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ValueEqualsParameterMultiConverter}" Mode="OneWay">
                                                <Binding Path="Data.SortName" Source="{StaticResource Browser}"/>
                                                <Binding Path="."/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Converter={StaticResource ObjectToTypeConverter}}" Value="{x:Type ComponentModel:ListSortDirection}">
                                    <Setter Property="Command" Value="{Binding Data.SortDirectionCommand, Source={StaticResource Browser}}"/>
                                    <Setter Property="CommandParameter" Value="{Binding .}"/>
                                    <Setter Property="Linq:MenuItemExtensions.GroupName" Value="SortDirection"/>
                                    <Setter Property="IsChecked">
                                        <Setter.Value>
                                            <MultiBinding Converter="{StaticResource ValueEqualsParameterMultiConverter}" Mode="OneWay">
                                                <Binding Path="Data.SortDirection" Source="{StaticResource Browser}"/>
                                                <Binding Path="."/>
                                            </MultiBinding>
                                        </Setter.Value>
                                    </Setter>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContextMenu.ItemContainerStyle>
                    <ContextMenu.ItemsSource>
                        <CompositeCollection>
                            <CollectionContainer Collection="{Markup:Enumerate Storage:ItemProperty}"/>
                            <Separator/>
                            <CollectionContainer Collection="{Markup:Enumerate ComponentModel:ListSortDirection}"/>
                        </CompositeCollection>
                    </ContextMenu.ItemsSource>
                </ContextMenu>
            </Common:MaskedToggleButton.DropDown>
        </Common:MaskedToggleButton>
        <Common:MaskedToggleButton
            Grid.Column="3"
            Source="pack://application:,,,/Imagin.Common.WPF;component/Images/32ArrowDown.png"
            ToolTip="View">
            <Common:MaskedToggleMenu.DropDown>
                <ContextMenu DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                    <ContextMenu.Resources>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="IsCheckable" Value="True"/>
                            <Setter Property="StaysOpenOnClick" Value="True"/>
                        </Style>
                    </ContextMenu.Resources>
                    <MenuItem
                        Header="Content" 
                        IsChecked="{Binding View, Converter={StaticResource ValueEqualsParameterConverter}, ConverterParameter={x:Static Common:BrowserView.Content}}"/>
                    <MenuItem 
                        Header="Details" 
                        IsChecked="{Binding View, Converter={StaticResource ValueEqualsParameterConverter}, ConverterParameter={x:Static Common:BrowserView.Details}}"/>
                    <MenuItem
                        Header="List" 
                        IsChecked="{Binding View, Converter={StaticResource ValueEqualsParameterConverter}, ConverterParameter={x:Static Common:BrowserView.List}}"/>
                    <MenuItem 
                        Header="Thumbnails" 
                        IsChecked="{Binding View, Converter={StaticResource ValueEqualsParameterConverter}, ConverterParameter={x:Static Common:BrowserView.Thumbnails}}"/>
                    <MenuItem
                        Header="Tiles" 
                        IsChecked="{Binding View, Converter={StaticResource ValueEqualsParameterConverter}, ConverterParameter={x:Static Common:BrowserView.Tiles}}"/>
                    <Separator/>
                    <Common:SliderMenuItem 
                        Value="{Binding ItemSize, Mode=TwoWay}">
                        <Common:SliderMenuItem.Resources>
                            <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                <Setter Property="StaysOpenOnClick" Value="True"/>
                            </Style>
                        </Common:SliderMenuItem.Resources>
                        <MenuItem 
                            Header="Tiny" 
                            IsCheckable="False"
                            Common:SliderMenuItem.Value="16" 
                            Common:SliderMenuItem.Steps="1"/>
                        <MenuItem 
                            Header="Smaller" 
                            IsCheckable="False"
                            Common:SliderMenuItem.Value="24" 
                            Common:SliderMenuItem.Steps="1"/>
                        <MenuItem 
                            Header="Small" 
                            IsCheckable="False"
                            Common:SliderMenuItem.Value="32" 
                            Common:SliderMenuItem.Steps="1"/>
                        <MenuItem 
                            Header="Normal" 
                            IsCheckable="False"
                            Common:SliderMenuItem.Value="64" 
                            Common:SliderMenuItem.Steps="4"/>
                        <MenuItem 
                            Header="Large" 
                            IsCheckable="False"
                            Common:SliderMenuItem.Value="128" 
                            Common:SliderMenuItem.Steps="8"/>
                        <MenuItem 
                            Header="Larger" 
                            IsCheckable="False"
                            Common:SliderMenuItem.Value="256" 
                            Common:SliderMenuItem.Steps="16"/>
                        <MenuItem 
                            Header="ExtraLarge" 
                            IsCheckable="False"
                            Common:SliderMenuItem.Value="512" 
                            Common:SliderMenuItem.Steps="32"/>
                    </Common:SliderMenuItem>
                </ContextMenu>
            </Common:MaskedToggleMenu.DropDown>
        </Common:MaskedToggleButton>
        -->
        <Grid
            Grid.Row="1"
            Linq:GridExtensions.Columns="30*,Auto,70*">
            <local:Navigator
                Grid.Column="0"
                Path="{Binding Path, Mode=TwoWay}"
                Root="{Binding Root, Mode=TwoWay}"
                ViewFiles="False"
                ViewHiddenItems="{Binding ViewHiddenItems, Mode=TwoWay}"/>
            <GridSplitter
                Grid.Column="1"
                Background="Transparent"
                ResizeBehavior="PreviousAndNext"
                ResizeDirection="Columns"
                ShowsPreview="True"
                Width="5"/>
            <Grid
                Grid.Column="2"
                Linq:GridExtensions.Rows="*,Auto">
                <local:Browser
                    Grid.Row="0"
                    x:Name="PART_Browser"
                    DataContext="{Binding Data, Source={StaticResource Explorer}}"
                    FileExtensions="{Binding FileExtensions, Mode=OneWay}"
                    FileOpened="OnFileOpened"
                    GroupName="{Binding GroupName, Mode=TwoWay}"
                    History="{Binding History, Mode=TwoWay}"
                    ItemSize="{Binding ViewSize, Mode=TwoWay}"
                    OpenFilesOnClick="False"
                    Path="{Binding Path, Mode=TwoWay}"
                    Selection="{Binding Selection, Mode=TwoWay}"
                    SortDirection="{Binding SortDirection, Mode=TwoWay}"
                    SortName="{Binding SortName, Mode=TwoWay}"
                    View="{Binding View, Mode=TwoWay}"
                    ViewFiles="{Binding ViewFiles, Mode=TwoWay}"
                    ViewFileExtensions="{Binding ViewFileExtensions}"
                    ViewHiddenItems="{Binding ViewHiddenItems}">
                </local:Browser>
                <Border
                    Grid.Row="1"
                    BorderBrush="#22000000"
                    BorderThickness="0,1,0,0"
                    Margin="10,5,10,2.5">
                    <Grid>
                        <TextBlock
                            Margin="0,7.5,0,5"
                            Opacity="0.4">
                            <Run Text="{Binding Items.Count, ElementName=PART_Browser, Mode=OneWay, StringFormat={} {0} item(s)}"/>
                            <Run Text="▪"/>
                            <Run Text="{Binding Length, Converter={StaticResource FileSizeConverter}, ElementName=PART_Browser, Mode=OneWay}"/>
                        </TextBlock>
                        <TextBlock
                            HorizontalAlignment="Right"
                            Margin="0,7.5,0,5"
                            Opacity="0.4"
                            Visibility="{Binding Selection.Count, ElementName=PART_Browser, Converter={StaticResource Int32ToVisibilityConverter}}">
                            <Run Text="{Binding Selection.Count, ElementName=PART_Browser, Mode=OneWay, StringFormat={} {0} item(s) selected}"/>
                            <Run Text="▪"/>
                            <Run Text="{Binding SelectionLength, Converter={StaticResource FileSizeConverter}, ElementName=PART_Browser, Mode=OneWay}"/>
                        </TextBlock>
                    </Grid>
                </Border>
            </Grid>
        </Grid>
    </Grid>
</UserControl>